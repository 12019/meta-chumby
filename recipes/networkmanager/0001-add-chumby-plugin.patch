diff -Nurd NetworkManager-0.8.1-stock/configure.ac NetworkManager-0.8.1/configure.ac
--- NetworkManager-0.8.1-stock/configure.ac	2011-04-04 13:28:23.328849155 +0800
+++ NetworkManager-0.8.1/configure.ac	2011-04-04 13:28:39.260847914 +0800
@@ -473,6 +473,7 @@
 system-settings/Makefile
 system-settings/plugins/Makefile
 system-settings/plugins/ifupdown/Makefile
+system-settings/plugins/chumby/Makefile
 system-settings/plugins/ifcfg-rh/Makefile
 system-settings/plugins/ifcfg-rh/tests/Makefile
 system-settings/plugins/ifcfg-rh/tests/network-scripts/Makefile
@@ -510,9 +511,6 @@
 man/nmcli.1
 po/Makefile.in
 policy/Makefile
-docs/Makefile
-docs/libnm-glib/Makefile
-docs/libnm-util/Makefile
 NetworkManager.pc
 examples/Makefile
 examples/python/Makefile
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/Makefile.am NetworkManager-0.8.1/system-settings/plugins/Makefile.am
--- NetworkManager-0.8.1-stock/system-settings/plugins/Makefile.am	2011-04-04 13:28:23.312849098 +0800
+++ NetworkManager-0.8.1/system-settings/plugins/Makefile.am	2011-04-04 13:28:39.260847914 +0800
@@ -15,3 +15,5 @@
 if TARGET_DEBIAN
 SUBDIRS+=ifupdown
 endif
+
+SUBDIRS+=chumby
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/Makefile.in NetworkManager-0.8.1/system-settings/plugins/Makefile.in
--- NetworkManager-0.8.1-stock/system-settings/plugins/Makefile.in	2011-04-04 13:28:23.300849183 +0800
+++ NetworkManager-0.8.1/system-settings/plugins/Makefile.in	2011-04-04 13:28:39.260847914 +0800
@@ -68,7 +68,7 @@
 	distdir
 ETAGS = etags
 CTAGS = ctags
-DIST_SUBDIRS = keyfile ifcfg-rh ifcfg-suse ifupdown
+DIST_SUBDIRS = keyfile ifcfg-rh ifcfg-suse ifupdown chumby
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 am__relativize = \
   dir0=`pwd`; \
@@ -272,7 +272,7 @@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 SUBDIRS = keyfile $(am__append_1) $(am__append_2) $(am__append_3) \
-	$(am__append_4)
+	$(am__append_4) chumby
 all: all-recursive
 
 .SUFFIXES:
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/Makefile.am NetworkManager-0.8.1/system-settings/plugins/chumby/Makefile.am
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/Makefile.am	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/Makefile.am	2011-04-04 13:28:39.260847914 +0800
@@ -0,0 +1,29 @@
+
+pkglib_LTLIBRARIES = libnm-settings-plugin-chumby.la
+
+libnm_settings_plugin_chumby_la_SOURCES = \
+	plugin.c \
+	plugin.h \
+	nm-chumby-connection.c \
+	nm-chumby-connection.h
+
+libnm_settings_plugin_chumby_la_CPPFLAGS = \
+	$(GLIB_CFLAGS) \
+	$(GMODULE_CFLAGS) \
+	$(DBUS_CFLAGS) \
+	`pkg-config libxml-2.0 --cflags` \
+	-DG_DISABLE_DEPRECATED \
+	-I${top_srcdir}/src/system-settings \
+	-I$(top_srcdir)/include \
+	-I$(top_srcdir)/libnm-util \
+	-I$(top_srcdir)/libnm-glib \
+	-DSYSCONFDIR=\"$(sysconfdir)\"
+
+libnm_settings_plugin_chumby_la_LDFLAGS = -module -avoid-version `pkg-config libxml-2.0 --libs`
+libnm_settings_plugin_chumby_la_LIBADD = \
+	$(top_builddir)/libnm-util/libnm-util.la \
+	$(top_builddir)/libnm-glib/libnm-glib.la \
+	$(GLIB_LIBS) \
+	$(GMODULE_LIBS) \
+	$(GIO_LIBS)
+
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/Makefile.in NetworkManager-0.8.1/system-settings/plugins/chumby/Makefile.in
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/Makefile.in	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/Makefile.in	2011-04-04 13:28:39.260847914 +0800
@@ -0,0 +1,637 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+subdir = system-settings/plugins/chumby
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/compiler_warnings.m4 \
+	$(top_srcdir)/m4/gtk-doc.m4 $(top_srcdir)/m4/intltool.m4 \
+	$(top_srcdir)/m4/libnl-check.m4 $(top_srcdir)/m4/libtool.m4 \
+	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
+	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__installdirs = "$(DESTDIR)$(pkglibdir)"
+LTLIBRARIES = $(pkglib_LTLIBRARIES)
+am__DEPENDENCIES_1 =
+libnm_settings_plugin_chumby_la_DEPENDENCIES =  \
+	$(top_builddir)/libnm-util/libnm-util.la \
+	$(top_builddir)/libnm-glib/libnm-glib.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
+am_libnm_settings_plugin_chumby_la_OBJECTS =  \
+	libnm_settings_plugin_chumby_la-plugin.lo \
+	libnm_settings_plugin_chumby_la-nm-chumby-connection.lo
+libnm_settings_plugin_chumby_la_OBJECTS =  \
+	$(am_libnm_settings_plugin_chumby_la_OBJECTS)
+libnm_settings_plugin_chumby_la_LINK = $(LIBTOOL) --tag=CC \
+	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
+	$(AM_CFLAGS) $(CFLAGS) \
+	$(libnm_settings_plugin_chumby_la_LDFLAGS) $(LDFLAGS) -o $@
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libnm_settings_plugin_chumby_la_SOURCES)
+DIST_SOURCES = $(libnm_settings_plugin_chumby_la_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
+ALL_LINGUAS = @ALL_LINGUAS@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CATALOGS = @CATALOGS@
+CATOBJEXT = @CATOBJEXT@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DATADIRNAME = @DATADIRNAME@
+DBUS_CFLAGS = @DBUS_CFLAGS@
+DBUS_LIBS = @DBUS_LIBS@
+DBUS_SYS_DIR = @DBUS_SYS_DIR@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DHCLIENT_PATH = @DHCLIENT_PATH@
+DHCPCD_PATH = @DHCPCD_PATH@
+DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
+GIO_CFLAGS = @GIO_CFLAGS@
+GIO_LIBS = @GIO_LIBS@
+GLIB_CFLAGS = @GLIB_CFLAGS@
+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
+GLIB_LIBS = @GLIB_LIBS@
+GMODULE_CFLAGS = @GMODULE_CFLAGS@
+GMODULE_LIBS = @GMODULE_LIBS@
+GMOFILES = @GMOFILES@
+GMSGFMT = @GMSGFMT@
+GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
+GNUTLS_LIBS = @GNUTLS_LIBS@
+GREP = @GREP@
+GTKDOC_CHECK = @GTKDOC_CHECK@
+GTKDOC_MKPDF = @GTKDOC_MKPDF@
+GTKDOC_REBASE = @GTKDOC_REBASE@
+GUDEV_CFLAGS = @GUDEV_CFLAGS@
+GUDEV_LIBS = @GUDEV_LIBS@
+HTML_DIR = @HTML_DIR@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+INSTOBJEXT = @INSTOBJEXT@
+INTLLIBS = @INTLLIBS@
+INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
+INTLTOOL_MERGE = @INTLTOOL_MERGE@
+INTLTOOL_PERL = @INTLTOOL_PERL@
+INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
+IPTABLES_PATH = @IPTABLES_PATH@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBDL = @LIBDL@
+LIBGCRYPT_CFLAGS = @LIBGCRYPT_CFLAGS@
+LIBGCRYPT_CONFIG = @LIBGCRYPT_CONFIG@
+LIBGCRYPT_LIBS = @LIBGCRYPT_LIBS@
+LIBM = @LIBM@
+LIBNL_CFLAGS = @LIBNL_CFLAGS@
+LIBNL_LIBS = @LIBNL_LIBS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+MKINSTALLDIRS = @MKINSTALLDIRS@
+MSGFMT = @MSGFMT@
+MSGFMT_OPTS = @MSGFMT_OPTS@
+MSGMERGE = @MSGMERGE@
+NM = @NM@
+NMEDIT = @NMEDIT@
+NSS_CFLAGS = @NSS_CFLAGS@
+NSS_LIBS = @NSS_LIBS@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
+POFILES = @POFILES@
+POLKIT_CFLAGS = @POLKIT_CFLAGS@
+POLKIT_LIBS = @POLKIT_LIBS@
+POSUB = @POSUB@
+PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
+PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
+PPPD_PLUGIN_DIR = @PPPD_PLUGIN_DIR@
+RANLIB = @RANLIB@
+RESOLVCONF_PATH = @RESOLVCONF_PATH@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+SYSTEM_CA_PATH = @SYSTEM_CA_PATH@
+UDEV_BASE_DIR = @UDEV_BASE_DIR@
+USE_NLS = @USE_NLS@
+UUID_CFLAGS = @UUID_CFLAGS@
+UUID_LIBS = @UUID_LIBS@
+VERSION = @VERSION@
+XGETTEXT = @XGETTEXT@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+pkglib_LTLIBRARIES = libnm-settings-plugin-chumby.la
+libnm_settings_plugin_chumby_la_SOURCES = \
+	plugin.c \
+	plugin.h \
+	nm-chumby-connection.c \
+	nm-chumby-connection.h
+
+libnm_settings_plugin_chumby_la_CPPFLAGS = \
+	$(GLIB_CFLAGS) \
+	$(GMODULE_CFLAGS) \
+	$(DBUS_CFLAGS) \
+	`pkg-config libxml-2.0 --cflags` \
+	-DG_DISABLE_DEPRECATED \
+	-I${top_srcdir}/src/system-settings \
+	-I$(top_srcdir)/include \
+	-I$(top_srcdir)/libnm-util \
+	-I$(top_srcdir)/libnm-glib \
+	-DSYSCONFDIR=\"$(sysconfdir)\"
+
+libnm_settings_plugin_chumby_la_LDFLAGS = -module -avoid-version `pkg-config libxml-2.0 --libs`
+libnm_settings_plugin_chumby_la_LIBADD = \
+	$(top_builddir)/libnm-util/libnm-util.la \
+	$(top_builddir)/libnm-glib/libnm-glib.la \
+	$(GLIB_LIBS) \
+	$(GMODULE_LIBS) \
+	$(GIO_LIBS)
+
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu system-settings/plugins/chumby/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu system-settings/plugins/chumby/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
+	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
+	}
+
+uninstall-pkglibLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
+	done
+
+clean-pkglibLTLIBRARIES:
+	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
+	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+libnm-settings-plugin-chumby.la: $(libnm_settings_plugin_chumby_la_OBJECTS) $(libnm_settings_plugin_chumby_la_DEPENDENCIES) 
+	$(libnm_settings_plugin_chumby_la_LINK) -rpath $(pkglibdir) $(libnm_settings_plugin_chumby_la_OBJECTS) $(libnm_settings_plugin_chumby_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnm_settings_plugin_chumby_la-nm-chumby-connection.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnm_settings_plugin_chumby_la-plugin.Plo@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
+@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
+
+libnm_settings_plugin_chumby_la-plugin.lo: plugin.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnm_settings_plugin_chumby_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnm_settings_plugin_chumby_la-plugin.lo -MD -MP -MF $(DEPDIR)/libnm_settings_plugin_chumby_la-plugin.Tpo -c -o libnm_settings_plugin_chumby_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libnm_settings_plugin_chumby_la-plugin.Tpo $(DEPDIR)/libnm_settings_plugin_chumby_la-plugin.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='plugin.c' object='libnm_settings_plugin_chumby_la-plugin.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnm_settings_plugin_chumby_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnm_settings_plugin_chumby_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c
+
+libnm_settings_plugin_chumby_la-nm-chumby-connection.lo: nm-chumby-connection.c
+@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnm_settings_plugin_chumby_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libnm_settings_plugin_chumby_la-nm-chumby-connection.lo -MD -MP -MF $(DEPDIR)/libnm_settings_plugin_chumby_la-nm-chumby-connection.Tpo -c -o libnm_settings_plugin_chumby_la-nm-chumby-connection.lo `test -f 'nm-chumby-connection.c' || echo '$(srcdir)/'`nm-chumby-connection.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libnm_settings_plugin_chumby_la-nm-chumby-connection.Tpo $(DEPDIR)/libnm_settings_plugin_chumby_la-nm-chumby-connection.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='nm-chumby-connection.c' object='libnm_settings_plugin_chumby_la-nm-chumby-connection.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnm_settings_plugin_chumby_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libnm_settings_plugin_chumby_la-nm-chumby-connection.lo `test -f 'nm-chumby-connection.c' || echo '$(srcdir)/'`nm-chumby-connection.c
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(pkglibdir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am: install-pkglibLTLIBRARIES
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-pkglibLTLIBRARIES
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libtool clean-pkglibLTLIBRARIES ctags distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am install-man \
+	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am uninstall-pkglibLTLIBRARIES
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/nm-chumby-connection.c NetworkManager-0.8.1/system-settings/plugins/chumby/nm-chumby-connection.c
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/nm-chumby-connection.c	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/nm-chumby-connection.c	2011-04-04 13:28:39.260847914 +0800
@@ -0,0 +1,190 @@
+/* -*- Mode: C; tab-width: 5; indent-tabs-mode: t; c-basic-offset: 5 -*- */
+
+/* NetworkManager system settings service (chumby)
+ *
+ * Alexander Sack <asac@ubuntu.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2007,2008 Canonical Ltd.
+ */
+
+#include <string.h>
+#include <glib/gstdio.h>
+#include <NetworkManager.h>
+#include <nm-utils.h>
+#include <nm-setting-wireless-security.h>
+#include <nm-sysconfig-connection.h>
+#include <nm-system-config-interface.h>
+#include <nm-system-config-error.h>
+
+#include "nm-chumby-connection.h"
+#include "plugin.h"
+
+G_DEFINE_TYPE (NMChumbyConnection, nm_chumby_connection, NM_TYPE_SYSCONFIG_CONNECTION)
+
+#define NM_CHUMBY_CONNECTION_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), NM_TYPE_CHUMBY_CONNECTION, NMChumbyConnectionPrivate))
+
+typedef struct {
+	struct connection *cconnection;
+} NMChumbyConnectionPrivate;
+
+enum {
+	PROP_ZERO,
+	PROP_CONNECTION,
+	_PROP_END,
+};
+
+
+NMChumbyConnection*
+nm_chumby_connection_new (struct connection *connection)
+{
+	g_return_val_if_fail (connection != NULL, NULL);
+
+	return (NMChumbyConnection *) g_object_new (NM_TYPE_CHUMBY_CONNECTION,
+						    NM_CHUMBY_CONNECTION_CHUMBY, connection,
+						    NULL);
+}
+
+static void
+get_secrets (NMExportedConnection *exported,
+             const gchar *setting_name,
+             const gchar **hints,
+             gboolean request_new,
+             DBusGMethodInvocation *context)
+{
+	GError *error = NULL;
+
+	PLUGIN_PRINT ("SCPlugin-Chumby", "get_secrets() for setting_name:'%s'", setting_name);
+
+	/* FIXME: Only wifi secrets are supported for now */
+	if (strcmp (setting_name, NM_SETTING_WIRELESS_SECURITY_SETTING_NAME)) {
+		g_set_error (&error,
+		             NM_SYSCONFIG_SETTINGS_ERROR,
+		             NM_SYSCONFIG_SETTINGS_ERROR_GENERAL,
+		             "%s.%d - security setting name not supported '%s'.",
+		             __FILE__, __LINE__, setting_name);
+		PLUGIN_PRINT ("SCPlugin-Chumby", "%s", error->message);
+		dbus_g_method_return_error (context, error);
+		g_error_free (error);
+		return;
+	}
+
+	NM_EXPORTED_CONNECTION_CLASS (nm_chumby_connection_parent_class)->get_secrets (exported, setting_name, hints, request_new, context);
+}
+
+static void
+nm_chumby_connection_init (NMChumbyConnection *connection)
+{
+}
+
+static GObject *
+constructor (GType type,
+		   guint n_construct_params,
+		   GObjectConstructParam *construct_params)
+{
+	GObject *object;
+	NMChumbyConnectionPrivate *priv;
+
+	object = G_OBJECT_CLASS (nm_chumby_connection_parent_class)->constructor (type, n_construct_params, construct_params);
+	g_return_val_if_fail (object, NULL);
+
+	priv = NM_CHUMBY_CONNECTION_GET_PRIVATE (object);
+	if (!priv) {
+		g_warning ("%s.%d - no private instance.", __FILE__, __LINE__);
+		goto err;
+	}
+	if (!priv->cconnection) {
+		g_warning ("(chumby) cconnection not provided to constructor.");
+		goto err;
+	}
+
+	connection_to_nmconnection(NM_CONNECTION(object), priv->cconnection);
+	/*
+	if (!chumby_update_connection_from_if_block (NM_CONNECTION (object), priv->cconnection, &error)) {
+		g_warning ("%s.%d - invalid connection read from /etc/network/interfaces: (%d) %s",
+		           __FILE__,
+		           __LINE__,
+		           error ? error->code : -1,
+		           error && error->message ? error->message : "(unknown)");
+		goto err;
+	}
+	*/
+
+	return object;
+
+ err:
+	g_object_unref (object);
+	return NULL;
+}
+
+static void
+set_property (GObject *object, guint prop_id,
+		    const GValue *value, GParamSpec *pspec)
+{
+	NMChumbyConnectionPrivate *priv = NM_CHUMBY_CONNECTION_GET_PRIVATE (object);
+	g_return_if_fail (priv);
+
+	switch (prop_id) {
+	case PROP_CONNECTION:
+		priv->cconnection = g_value_get_pointer (value);
+		break;
+	default:
+		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+		break;
+	}
+}
+
+static void
+get_property (GObject *object, guint prop_id,
+		    GValue *value, GParamSpec *pspec)
+{
+	NMChumbyConnectionPrivate *priv = NM_CHUMBY_CONNECTION_GET_PRIVATE (object);
+	g_return_if_fail (priv);
+
+	switch (prop_id) {
+	case PROP_CONNECTION:
+		g_value_set_pointer (value, priv->cconnection);
+		break;
+	default:
+		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+		break;
+	}
+}
+
+static void
+nm_chumby_connection_class_init (NMChumbyConnectionClass *chumby_connection_class)
+{
+	GObjectClass *object_class = G_OBJECT_CLASS (chumby_connection_class);
+	NMExportedConnectionClass *connection_class = NM_EXPORTED_CONNECTION_CLASS (chumby_connection_class);
+
+	g_type_class_add_private (chumby_connection_class, sizeof (NMChumbyConnectionPrivate));
+
+	/* Virtual methods */
+	object_class->constructor  = constructor;
+	object_class->set_property = set_property;
+	object_class->get_property = get_property;
+
+	connection_class->get_secrets = get_secrets;
+
+	/* Properties */
+	g_object_class_install_property
+		(object_class, PROP_CONNECTION,
+		 g_param_spec_pointer (NM_CHUMBY_CONNECTION_CHUMBY,
+						   "cconnection",
+						   "",
+						   G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
+}
+
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/nm-chumby-connection.h NetworkManager-0.8.1/system-settings/plugins/chumby/nm-chumby-connection.h
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/nm-chumby-connection.h	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/nm-chumby-connection.h	2011-04-04 13:28:39.264848187 +0800
@@ -0,0 +1,57 @@
+/* -*- Mode: C; tab-width: 5; indent-tabs-mode: t; c-basic-offset: 5 -*- */
+
+/* NetworkManager system settings service (chumby)
+ *
+ * Alexander Sack <asac@ubuntu.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2008 Canonical Ltd.
+ */
+
+#ifndef NM_CHUMBY_CONNECTION_H
+#define NM_CHUMBY_CONNECTION_H
+
+#include <nm-sysconfig-connection.h>
+
+G_BEGIN_DECLS
+
+#define NM_TYPE_CHUMBY_CONNECTION            (nm_chumby_connection_get_type ())
+#define NM_CHUMBY_CONNECTION(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), NM_TYPE_CHUMBY_CONNECTION, NMChumbyConnection))
+#define NM_CHUMBY_CONNECTION_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), NM_TYPE_CHUMBY_CONNECTION, NMChumbyConnectionClass))
+#define NM_IS_CHUMBY_CONNECTION(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), NM_TYPE_CHUMBY_CONNECTION))
+#define NM_IS_CHUMBY_CONNECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), NM_TYPE_CHUMBY_CONNECTION))
+#define NM_CHUMBY_CONNECTION_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), NM_TYPE_CHUMBY_CONNECTION, NMChumbyConnectionClass))
+
+#define NM_CHUMBY_CONNECTION_CHUMBY "chumby"
+
+typedef struct {
+	NMExportedConnection parent;
+} NMChumbyConnection;
+
+typedef struct {
+	NMExportedConnectionClass parent;
+} NMChumbyConnectionClass;
+
+struct connection;
+
+GType nm_chumby_connection_get_type (void);
+
+
+NMChumbyConnection *nm_chumby_connection_new (struct connection *connection);
+
+G_END_DECLS
+
+#endif /* NM_CHUMBY_CONNECTION_H */
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/plugin.c NetworkManager-0.8.1/system-settings/plugins/chumby/plugin.c
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/plugin.c	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/plugin.c	2011-04-04 13:28:53.276849034 +0800
@@ -0,0 +1,776 @@
+/* -*- Mode: C; tab-width: 5; indent-tabs-mode: t; c-basic-offset: 5 -*- */
+
+/* NetworkManager system settings service
+ *
+ * Søren Sandmann <sandmann@daimi.au.dk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2007 - 2009 Red Hat, Inc.
+ * (C) Copyright 2007 - 2008 Novell, Inc.
+ */
+
+#include <config.h>
+#include <string.h>
+
+#include <gmodule.h>
+#include <glib-object.h>
+#include <gio/gio.h>
+
+#include <stdio.h>
+#include <string.h>
+#include <stdint.h>
+#include <ctype.h>
+#include <libxml/parser.h>
+#include <libxml/tree.h>
+#include <glib.h>
+#include <sys/stat.h>
+#include <arpa/inet.h>
+#include <sys/stat.h>
+#include <netinet/ether.h>
+
+#include <nm-setting.h>
+#include <nm-setting-ip4-config.h>
+#include <nm-setting-ip6-config.h>
+#include <nm-setting-vpn.h>
+#include <nm-setting-connection.h>
+#include <nm-setting-wired.h>
+#include <nm-setting-wireless.h>
+#include <nm-setting-bluetooth.h>
+#include <nm-setting-serial.h>
+#include <nm-setting-gsm.h>
+#include <nm-setting-cdma.h>
+#include <nm-setting-ppp.h>
+
+
+#include "plugin.h"
+#include "nm-system-config-interface.h"
+
+#define CHUMBY_PLUGIN_NAME "chumby"
+#define CHUMBY_PLUGIN_INFO "(C) 2011 chumby industries"
+#define CHUMBY_DIR "/psp"
+#define CONF_DHCP CHUMBY_DIR "/dhcp"
+#define HOSTNAME_FILE "/etc/HOSTNAME"
+#define CONFIG_FILE "/psp/network_configs"
+
+static void system_config_interface_init (NMSystemConfigInterface *system_config_interface_class);
+
+G_DEFINE_TYPE_EXTENDED (SCPluginChumby, sc_plugin_chumby, G_TYPE_OBJECT, 0,
+                        G_IMPLEMENT_INTERFACE (NM_TYPE_SYSTEM_CONFIG_INTERFACE,
+                                               system_config_interface_init))
+
+#define SC_PLUGIN_CHUMBY_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), SC_TYPE_PLUGIN_CHUMBY, SCPluginChumbyPrivate))
+
+
+#define CHUMBY_FILE_PATH_TAG "chumby-file-path"
+
+
+enum connection_type {
+        CONNECTION_TYPE_LAN,
+        CONNECTION_TYPE_WLAN,
+};
+
+enum key_type {
+        KEY_TYPE_ASCII,
+        KEY_TYPE_HEX,
+};
+
+enum auth_type {
+        AUTH_TYPE_OPEN,
+        AUTH_TYPE_WEPAUTO,
+        AUTH_TYPE_WPAPSK,
+        AUTH_TYPE_WPA2PSK,
+};
+
+enum encryption_type {
+        ENCRYPTION_TYPE_NONE,
+        ENCRYPTION_TYPE_WEP,
+        ENCRYPTION_TYPE_AES,
+        ENCRYPTION_TYPE_TKIP,
+};
+
+enum allocation_type {
+        ALLOCATION_TYPE_STATIC,
+        ALLOCATION_TYPE_DHCP,
+};
+
+struct lan_connection {
+};
+
+struct wifi_connection {
+        char ssid[64];
+        char ssid_len;
+        char hwaddr[18];
+        char key[1024];
+        enum key_type key_type;
+        enum auth_type auth_type;
+        enum encryption_type encryption_type;
+};
+
+struct connection {
+        enum connection_type connection_type;
+
+        enum allocation_type allocation_type;
+        uint32_t ip;
+        uint32_t netmask;
+        uint32_t gateway;
+        uint32_t nameserver1;
+        uint32_t nameserver2;
+
+        union { 
+                struct wifi_connection wlan;
+                struct lan_connection lan;
+        } phy;
+};
+
+
+typedef struct {
+	GFileMonitor *hostname_monitor;
+	GFileMonitor *dhcp_monitor;
+	char *hostname;
+	GHashTable *iface_connections;
+} SCPluginChumbyPrivate;
+
+GQuark
+chumby_plugin_error_quark (void)
+{
+	static GQuark error_quark = 0;
+
+	if (G_UNLIKELY (error_quark == 0))
+		error_quark = g_quark_from_static_string ("chumby-plugin-error-quark");
+
+	return error_quark;
+}
+
+typedef void (*FileChangedFn) (gpointer user_data);
+
+typedef struct {
+	FileChangedFn callback;
+	gpointer user_data;
+} FileMonitorInfo;
+
+
+
+
+
+static void
+md5touuid (gchar *input, gchar *output, gint32 output_size)
+{
+	int input_i, output_i;
+	bzero(output, output_size);
+
+	for (input_i = output_i = 0; output_i < output_size-1; output_i++, input_i++) {
+		output[output_i] = input[input_i];
+		if (input_i == 7 || input_i == 11 || input_i == 15 || input_i == 19)
+		{
+			output[++output_i] = '-';
+		}
+	}
+}
+
+static void
+generate_uuid (struct connection *conn, gchar *id, guint32 id_size)
+{
+	/* Make the UUID just be a hash of the SSID */
+	gchar *raw_id;
+	raw_id = g_compute_checksum_for_data(G_CHECKSUM_MD5, (guchar *)conn, sizeof(*conn));
+	md5touuid(raw_id, id, id_size);
+}
+
+
+
+static void
+strtoip(char *s, uint32_t *addr)
+{
+        *addr = inet_addr(s);
+}
+
+
+
+static void
+read_connection(struct connection *conn, xmlNode * a_node)
+{
+	xmlAttr *properties;
+	bzero(conn, sizeof(*conn));
+	properties = a_node->properties;
+	for(properties = a_node->properties; properties; properties = properties->next) {
+		char *name = (char *)properties->name;
+		char *value = (char *)properties->children->content;
+
+		if(!strcmp(name, "type")) {
+			if(!strcmp(value, "wlan"))
+				conn->connection_type = CONNECTION_TYPE_WLAN;
+			else if(!strcmp(value, "lan"))
+				conn->connection_type = CONNECTION_TYPE_LAN;
+			else {
+				PLUGIN_PRINT("chumby", "Unrecognized connection type: %s\n", value);
+				return;
+			}
+		}
+
+		else if(!strcmp(name, "hwaddr"))
+			strncpy(conn->phy.wlan.hwaddr, value, sizeof(conn->phy.wlan.hwaddr)-1);
+
+		else if(!strcmp(name, "ssid")) {
+			strncpy(conn->phy.wlan.ssid, value, sizeof(conn->phy.wlan.ssid)-1);
+			conn->phy.wlan.ssid_len = xmlUTF8Size(properties->name);
+		}
+
+		else if (!strcmp(name, "auth")) {
+			if(!strcmp(value, "OPEN"))
+				conn->phy.wlan.auth_type = AUTH_TYPE_OPEN;
+			else if(!strcmp(value, "WEPAUTO"))
+				conn->phy.wlan.auth_type = AUTH_TYPE_WEPAUTO;
+			else if(!strcmp(value, "WPAPSK"))
+				conn->phy.wlan.auth_type = AUTH_TYPE_WPAPSK;
+			else if(!strcmp(value, "WPA2PSK"))
+				conn->phy.wlan.auth_type = AUTH_TYPE_WPA2PSK;
+			else {
+				PLUGIN_PRINT("chumby", "Unrecognized auth: %s\n", value);
+				return;
+			}
+		}
+
+		else if (!strcmp(name, "encryption")) {
+			if(!strcmp(value, "NONE"))
+				conn->phy.wlan.encryption_type = ENCRYPTION_TYPE_NONE;
+			else if(!strcmp(value, "WEP"))
+				conn->phy.wlan.encryption_type = ENCRYPTION_TYPE_WEP;
+			else if(!strcmp(value, "TKIP"))
+				conn->phy.wlan.encryption_type = ENCRYPTION_TYPE_TKIP;
+			else if(!strcmp(value, "AES"))
+				conn->phy.wlan.encryption_type = ENCRYPTION_TYPE_AES;
+			else {
+				PLUGIN_PRINT("chumby", "Unrecognized encryption: %s\n", value);
+				return;
+			}
+		}
+
+		else if (!strcmp(name, "encoding")) {
+			if(!strcmp(value, "ascii"))
+				conn->phy.wlan.key_type = KEY_TYPE_ASCII;
+			else if(!strcmp(value, "hex"))
+				conn->phy.wlan.key_type = KEY_TYPE_HEX;
+			else {
+				PLUGIN_PRINT("chumby", "Unrecognized encoding type: %s\n", value);
+				return;
+			}
+		}
+
+		else if (!strcmp(name, "key"))
+			strncpy(conn->phy.wlan.key, value, sizeof(conn->phy.wlan.key)-1);
+
+		else if (!strcmp(name, "allocation")) {
+			if(!strcmp(value, "static"))
+				conn->allocation_type = ALLOCATION_TYPE_STATIC;
+			else if(!strcmp(value, "dhcp"))
+				conn->allocation_type = ALLOCATION_TYPE_DHCP;
+			else {
+				PLUGIN_PRINT("chumby", "Unrecognized allocation: %s\n", value);
+				return;
+			}
+		}
+	
+		else if (!strcmp(name, "ip"))
+			strtoip(value, &conn->ip);
+		else if (!strcmp(name, "netmask"))
+			strtoip(value, &conn->netmask);
+		else if (!strcmp(name, "gateway"))
+			strtoip(value, &conn->gateway);
+		else if (!strcmp(name, "nameserver1"))
+			strtoip(value, &conn->nameserver1);
+		else if (!strcmp(name, "nameserver2"))
+			strtoip(value, &conn->nameserver2);
+		else {
+			PLUGIN_PRINT("chumby", "Unrecognized field: %s\n", name);
+			return;
+		}
+	}
+}
+
+
+static void
+reload_configs (gpointer data)
+{
+	xmlDoc *doc = NULL;
+	xmlNode *root_element = NULL;
+	xmlNode *cur_node;
+
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (data);
+
+	GHashTable *existing;
+
+
+	PLUGIN_PRINT("chumby", "Reloading configs...\n");
+
+
+        if(priv->iface_connections)
+		existing = priv->iface_connections;
+	else
+		existing = g_hash_table_new (g_str_hash, g_str_equal);
+	priv->iface_connections = g_hash_table_new (g_str_hash, g_str_equal);
+
+
+	/*parse the file and get the DOM */
+	doc = xmlReadFile(CONFIG_FILE, NULL, 0);
+
+	if (doc == NULL) {
+		PLUGIN_PRINT("chumby", "error: could not parse file %s\n", CONFIG_FILE);
+		return;
+	}
+
+	/*Get the root element node */
+	root_element = xmlDocGetRootElement(doc);
+	for (cur_node = root_element->children; cur_node; cur_node = cur_node->next) {
+		if (cur_node->type == XML_ELEMENT_NODE && !strcmp((char *)cur_node->name, "configuration")) {
+			NMChumbyConnection *exported;
+			struct connection conn;
+			gchar uuid[60];
+			read_connection(&conn, cur_node);
+			generate_uuid(&conn, uuid, sizeof(uuid));
+
+			if (g_hash_table_lookup (priv->iface_connections, uuid)) {
+				PLUGIN_PRINT("chumby", "Ignoring duplicate connection %s (%s)\n", (conn.connection_type == CONNECTION_TYPE_WLAN) ? conn.phy.wlan.ssid : "lan", uuid);
+				continue;
+			}
+
+			/* Determine whether this connection is new */
+			exported = g_hash_table_lookup (existing, uuid);
+			if(!g_hash_table_remove (existing, uuid))
+			{
+				PLUGIN_PRINT("chumby", "Adding new connection %s (%s)\n", (conn.connection_type == CONNECTION_TYPE_WLAN) ? conn.phy.wlan.ssid : "lan", uuid);
+				exported = nm_chumby_connection_new(&conn);
+				g_signal_emit_by_name (data,
+						       NM_SYSTEM_CONFIG_INTERFACE_CONNECTION_ADDED,
+						       exported);
+				g_signal_emit_by_name (data,
+						       NM_SYSTEM_CONFIG_INTERFACE_UNMANAGED_SPECS_CHANGED);
+			}
+			else
+				PLUGIN_PRINT("chumby", "Preserving old connection %s (%s)\n", (conn.connection_type == CONNECTION_TYPE_WLAN) ? conn.phy.wlan.ssid : "lan", uuid);
+			g_hash_table_insert (priv->iface_connections, uuid, exported);
+		}
+	}
+	xmlFreeDoc(doc);
+	xmlCleanupParser();
+
+	/* Remove configs that don't exist anymore */
+	{
+		GHashTableIter iter;
+		gpointer value;
+
+		g_hash_table_iter_init (&iter, existing);
+		while (g_hash_table_iter_next (&iter, NULL, &value)) {
+			//g_object_ref (value);
+			g_signal_emit_by_name (value, NM_SETTINGS_CONNECTION_INTERFACE_REMOVED);
+			g_object_unref (value);
+		}
+	}
+
+	g_hash_table_destroy (existing);
+
+}
+
+
+
+void
+connection_to_nmconnection (NMConnection *connection, struct connection *conn)
+{
+	NMSettingConnection *s_con;
+	NMSetting *setting;
+	gchar id[40];
+	GError *error = NULL;
+
+
+	generate_uuid(conn, id, sizeof(id));
+
+	s_con = (NMSettingConnection *) nm_connection_get_setting (connection, NM_TYPE_SETTING_CONNECTION);
+
+
+	setting = nm_connection_create_setting ("connection");
+	g_object_set (setting, "uuid", id, NULL);
+	if(conn->connection_type == CONNECTION_TYPE_WLAN)
+	{
+		g_object_set (setting, "id", conn->phy.wlan.ssid, NULL);
+		g_object_set (setting, "type", "802-11-wireless", NULL);
+	}
+	else
+	{
+		g_object_set (setting, "id", "lan", NULL);
+		g_object_set (setting, "type", "802-3-ethernet", NULL);
+	}
+	nm_connection_add_setting (connection, setting);
+
+
+	setting = nm_connection_create_setting ("ipv4");
+	if(conn->allocation_type == ALLOCATION_TYPE_DHCP) {
+		g_object_set (setting, "method", "auto", NULL);
+	}
+	else {
+		int netmask;
+		GPtrArray *addresses;
+		GArray *address;
+
+		g_object_set (setting, "method", "manual", NULL);
+		for(netmask=31; netmask>=0; netmask--)
+			if(conn->netmask & (1<<netmask))
+				break;
+		netmask++;
+		g_object_set (setting, "method", "manual", NULL);
+
+		addresses = g_ptr_array_sized_new (3);
+		address = g_array_sized_new (FALSE, TRUE, sizeof (guint32), 3);
+		g_array_append_val (address, conn->ip);
+		g_array_append_val (address, netmask);
+		g_array_append_val (address, conn->gateway);
+		g_ptr_array_add (addresses, address);
+		g_object_set (setting, "addresses", addresses, NULL);
+		g_array_free (address, TRUE);
+		g_ptr_array_free (addresses, TRUE);
+		//fprintf(output, "addresses=%u,%u,%u\n", conn->ip, netmask+1, conn->gateway);
+		//fprintf(output, "dns=%u,%u\n", conn->nameserver1, conn->nameserver2);
+	}
+	nm_connection_add_setting (connection, setting);
+
+
+	if(conn->connection_type == CONNECTION_TYPE_WLAN) {
+		NMSettingWireless *wireless_setting = NULL;
+		GByteArray *array = NULL;
+
+		setting = nm_connection_create_setting ("802-11-wireless");
+
+
+		wireless_setting = NM_SETTING_WIRELESS(nm_setting_wireless_new());
+
+		/* Copy over the SSID */
+		PLUGIN_PRINT("chumby", "Setting SSID to %s (%d bytes long)", conn->phy.wlan.ssid, conn->phy.wlan.ssid_len);
+		array = g_byte_array_sized_new (strlen (conn->phy.wlan.ssid));
+		g_byte_array_append (array, (const guint8 *) conn->phy.wlan.ssid, strlen (conn->phy.wlan.ssid));
+
+		g_object_set (wireless_setting, NM_SETTING_WIRELESS_SSID, array, NULL);
+		g_byte_array_free (array, TRUE);
+		nm_connection_add_setting (connection, (NMSetting*)wireless_setting);
+
+
+		if (conn->phy.wlan.auth_type != AUTH_TYPE_OPEN) {
+			setting = nm_connection_create_setting ("802-11-wireless-security");
+			if(conn->phy.wlan.auth_type == AUTH_TYPE_OPEN || conn->phy.wlan.auth_type == AUTH_TYPE_WEPAUTO) {
+				g_object_set (setting, "key-mgmt", "none", NULL);
+			}
+			else if(conn->phy.wlan.auth_type == AUTH_TYPE_WPAPSK || conn->phy.wlan.auth_type == AUTH_TYPE_WPA2PSK) {
+				g_object_set (setting, "key-mgmt", "wpa-psk", NULL);
+			}
+			
+			if(conn->phy.wlan.encryption_type == ENCRYPTION_TYPE_WEP) {
+				g_object_set (setting, NM_SETTING_WIRELESS_SECURITY_WEP_KEY0, conn->phy.wlan.key, NULL);
+				if (conn->phy.wlan.key_type == KEY_TYPE_ASCII)
+					g_object_set (setting, NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE, NM_WEP_KEY_TYPE_PASSPHRASE, NULL);
+				else if (conn->phy.wlan.key_type == KEY_TYPE_HEX)
+					g_object_set (setting, NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE, NM_WEP_KEY_TYPE_KEY, NULL);
+				else
+					g_object_set (setting, NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE, NM_WEP_KEY_TYPE_UNKNOWN, NULL);
+			}
+			else if(conn->phy.wlan.encryption_type == ENCRYPTION_TYPE_AES || conn->phy.wlan.encryption_type == ENCRYPTION_TYPE_TKIP) {
+				g_object_set (setting, "psk", conn->phy.wlan.key, NULL);
+			}
+			nm_connection_add_setting (connection, setting);
+		}
+	}
+
+	else if(conn->connection_type == CONNECTION_TYPE_LAN) {
+		setting = nm_connection_create_setting ("802-3-ethernet");
+		nm_connection_add_setting (connection, setting);
+	}
+
+	if (!nm_connection_verify (connection, &error)) {
+		PLUGIN_PRINT("chumby", "Not a connection: %s", error->message);
+		g_object_unref (connection);
+		connection = NULL;
+	}
+
+
+	return;
+}
+
+
+static GSList *
+get_connections (NMSystemConfigInterface *config)
+{
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (config);
+	GSList *connections = NULL;
+	GHashTableIter iter;
+	gpointer value;
+
+	g_hash_table_iter_init (&iter, priv->iface_connections);
+	while (g_hash_table_iter_next (&iter, NULL, &value))
+		connections = g_slist_prepend (connections, value);
+
+	return connections;
+}
+
+
+
+
+static void
+file_changed (GFileMonitor *monitor,
+		    GFile *file,
+		    GFile *other_file,
+		    GFileMonitorEvent event_type,
+		    gpointer user_data)
+{
+	FileMonitorInfo *info;
+
+	switch (event_type) {
+	case G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT:
+	case G_FILE_MONITOR_EVENT_CREATED:
+		info = (FileMonitorInfo *) user_data;
+		info->callback (info->user_data);
+		g_signal_emit_by_name (G_OBJECT (info->user_data), NM_SYSTEM_CONFIG_INTERFACE_UNMANAGED_SPECS_CHANGED);
+		break;
+	default:
+		break;
+	}
+}
+
+static GFileMonitor *
+monitor_file_changes (const char *filename,
+				  FileChangedFn callback,
+				  gpointer user_data)
+{
+	GFile *file;
+	GFileMonitor *monitor;
+	FileMonitorInfo *info;
+
+	file = g_file_new_for_path (filename);
+	monitor = g_file_monitor_file (file, G_FILE_MONITOR_NONE, NULL, NULL);
+	g_object_unref (file);
+
+	if (monitor) {
+		info = g_new0 (FileMonitorInfo, 1);
+		info->callback = callback;
+		info->user_data = user_data;
+		g_object_weak_ref (G_OBJECT (monitor), (GWeakNotify) g_free, info);
+		g_signal_connect (monitor, "changed", G_CALLBACK (file_changed), info);
+	}
+
+	return monitor;
+}
+
+static gboolean
+hostname_is_dynamic (void)
+{
+	GIOChannel *channel;
+	const char *pattern = "DHCLIENT_SET_HOSTNAME=";
+	char *str = NULL;
+	int pattern_len;
+	gboolean dynamic = FALSE;
+
+	channel = g_io_channel_new_file (CONF_DHCP, "r", NULL);
+	if (!channel)
+		return dynamic;
+
+	pattern_len = strlen (pattern);
+
+	while (g_io_channel_read_line (channel, &str, NULL, NULL, NULL) != G_IO_STATUS_EOF) {
+		if (!strncmp (str, pattern, pattern_len)) {
+			if (!strncmp (str + pattern_len, "\"yes\"", 5))
+				dynamic = TRUE;
+			break;
+		}
+		g_free (str);
+	}
+
+	g_io_channel_shutdown (channel, FALSE, NULL);
+	g_io_channel_unref (channel);
+
+	return dynamic;
+}
+
+static char *
+hostname_read ()
+{
+	GIOChannel *channel;
+	char *hostname = NULL;
+
+	channel = g_io_channel_new_file (HOSTNAME_FILE, "r", NULL);
+	if (channel) {
+		g_io_channel_read_line (channel, &hostname, NULL, NULL, NULL);
+		g_io_channel_shutdown (channel, FALSE, NULL);
+		g_io_channel_unref (channel);
+
+		if (hostname)
+			hostname = g_strchomp (hostname);
+	}
+
+	return hostname;
+}
+
+static void
+hostname_changed (gpointer data)
+{
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (data);
+
+	g_free (priv->hostname);
+	if (hostname_is_dynamic ())
+		priv->hostname = NULL;
+	else
+		priv->hostname = hostname_read ();
+
+	g_object_notify (G_OBJECT (data), NM_SYSTEM_CONFIG_INTERFACE_HOSTNAME);
+}
+
+static void
+plugin_set_hostname (SCPluginChumby *plugin, const char *hostname)
+{
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (plugin);
+	GIOChannel *channel;
+
+	channel = g_io_channel_new_file (HOSTNAME_FILE, "w", NULL);
+	if (channel) {
+		g_io_channel_write_chars (channel, hostname, -1, NULL, NULL);
+		g_io_channel_write_chars (channel, "\n", -1, NULL, NULL);
+		g_io_channel_shutdown (channel, TRUE, NULL);
+		g_io_channel_unref (channel);
+	}
+
+	g_free (priv->hostname);
+	priv->hostname = hostname ? g_strdup (hostname) : NULL;
+}
+
+static void
+init (NMSystemConfigInterface *config)
+{
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (config);
+
+	priv->hostname_monitor = monitor_file_changes (HOSTNAME_FILE, hostname_changed, config);
+	priv->dhcp_monitor = monitor_file_changes (CONFIG_FILE, reload_configs, config);
+
+	if (!hostname_is_dynamic ())
+		priv->hostname = hostname_read ();
+
+	reload_configs(config);
+}
+
+static void
+sc_plugin_chumby_init (SCPluginChumby *self)
+{
+}
+
+static void
+dispose (GObject *object)
+{
+	SCPluginChumbyPrivate *priv = SC_PLUGIN_CHUMBY_GET_PRIVATE (object);
+
+	if (priv->dhcp_monitor)
+		g_object_unref (priv->dhcp_monitor);
+
+	if (priv->hostname_monitor)
+		g_object_unref (priv->hostname_monitor);
+
+	g_free (priv->hostname);
+
+	G_OBJECT_CLASS (sc_plugin_chumby_parent_class)->dispose (object);
+}
+
+static void
+get_property (GObject *object, guint prop_id,
+		    GValue *value, GParamSpec *pspec)
+{
+	switch (prop_id) {
+	case NM_SYSTEM_CONFIG_INTERFACE_PROP_NAME:
+		g_value_set_string (value, CHUMBY_PLUGIN_NAME);
+		break;
+	case NM_SYSTEM_CONFIG_INTERFACE_PROP_INFO:
+		g_value_set_string (value, CHUMBY_PLUGIN_INFO);
+		break;
+	case NM_SYSTEM_CONFIG_INTERFACE_PROP_CAPABILITIES:
+		g_value_set_uint (value, NM_SYSTEM_CONFIG_INTERFACE_CAP_MODIFY_HOSTNAME);
+		break;
+	case NM_SYSTEM_CONFIG_INTERFACE_PROP_HOSTNAME:
+		g_value_set_string (value, SC_PLUGIN_CHUMBY_GET_PRIVATE (object)->hostname);
+		break;
+	default:
+		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+		break;
+	}
+}
+
+static void
+set_property (GObject *object, guint prop_id,
+		    const GValue *value, GParamSpec *pspec)
+{
+	const char *hostname;
+
+	switch (prop_id) {
+	case NM_SYSTEM_CONFIG_INTERFACE_PROP_HOSTNAME:
+		hostname = g_value_get_string (value);
+		if (hostname && strlen (hostname) < 1)
+			hostname = NULL;
+		plugin_set_hostname (SC_PLUGIN_CHUMBY (object), hostname);
+		break;
+	default:
+		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+		break;
+	}
+}
+
+static void
+sc_plugin_chumby_class_init (SCPluginChumbyClass *req_class)
+{
+	GObjectClass *object_class = G_OBJECT_CLASS (req_class);
+
+	g_type_class_add_private (req_class, sizeof (SCPluginChumbyPrivate));
+
+	object_class->get_property = get_property;
+	object_class->set_property = set_property;
+	object_class->dispose = dispose;
+
+	g_object_class_override_property (object_class,
+							    NM_SYSTEM_CONFIG_INTERFACE_PROP_NAME,
+							    NM_SYSTEM_CONFIG_INTERFACE_NAME);
+
+	g_object_class_override_property (object_class,
+							    NM_SYSTEM_CONFIG_INTERFACE_PROP_INFO,
+							    NM_SYSTEM_CONFIG_INTERFACE_INFO);
+
+	g_object_class_override_property (object_class,
+							    NM_SYSTEM_CONFIG_INTERFACE_PROP_CAPABILITIES,
+							    NM_SYSTEM_CONFIG_INTERFACE_CAPABILITIES);
+
+	g_object_class_override_property (object_class,
+							    NM_SYSTEM_CONFIG_INTERFACE_PROP_HOSTNAME,
+							    NM_SYSTEM_CONFIG_INTERFACE_HOSTNAME);
+}
+
+static void
+system_config_interface_init (NMSystemConfigInterface *system_config_interface_class)
+{
+	/* interface implementation */
+	system_config_interface_class->init = init;
+	system_config_interface_class->get_connections = get_connections;
+}
+
+G_MODULE_EXPORT GObject *
+nm_system_config_factory (void)
+{
+	static SCPluginChumby *singleton = NULL;
+
+	if (!singleton)
+		singleton = SC_PLUGIN_CHUMBY (g_object_new (SC_TYPE_PLUGIN_CHUMBY, NULL));
+	else
+		g_object_ref (singleton);
+
+	return G_OBJECT (singleton);
+}
diff -Nurd NetworkManager-0.8.1-stock/system-settings/plugins/chumby/plugin.h NetworkManager-0.8.1/system-settings/plugins/chumby/plugin.h
--- NetworkManager-0.8.1-stock/system-settings/plugins/chumby/plugin.h	1970-01-01 07:30:00.000000000 +0730
+++ NetworkManager-0.8.1/system-settings/plugins/chumby/plugin.h	2011-04-04 13:28:39.264848187 +0800
@@ -0,0 +1,57 @@
+/* NetworkManager system settings service
+ *
+ * Søren Sandmann <sandmann@daimi.au.dk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2007 Red Hat, Inc.
+ */
+
+#ifndef _PLUGIN_H_
+#define _PLUGIN_H_
+
+#include <glib-object.h>
+#include "nm-chumby-connection.h"
+
+#define PLUGIN_NAME "chumby"
+
+#define SC_TYPE_PLUGIN_CHUMBY            (sc_plugin_chumby_get_type ())
+#define SC_PLUGIN_CHUMBY(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), SC_TYPE_PLUGIN_CHUMBY, SCPluginChumby))
+#define SC_PLUGIN_CHUMBY_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), SC_TYPE_PLUGIN_CHUMBY, SCPluginChumbyClass))
+#define SC_IS_PLUGIN_CHUMBY(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SC_TYPE_PLUGIN_CHUMBY))
+#define SC_IS_PLUGIN_CHUMBY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), SC_TYPE_PLUGIN_CHUMBY))
+#define SC_PLUGIN_CHUMBY_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), SC_TYPE_PLUGIN_CHUMBY, SCPluginChumbyClass))
+
+typedef struct _SCPluginChumby SCPluginChumby;
+typedef struct _SCPluginChumbyClass SCPluginChumbyClass;
+
+struct _SCPluginChumby {
+	GObject parent;
+};
+
+struct _SCPluginChumbyClass {
+	GObjectClass parent;
+};
+
+GType sc_plugin_chumby_get_type (void);
+
+GQuark chumby_plugin_error_quark (void);
+
+void
+connection_to_nmconnection (NMConnection *connection, struct connection *conn);
+
+
+#endif	/* _PLUGIN_H_ */
+
