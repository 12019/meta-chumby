#!/bin/sh

case "$1" in
	start)
	      # very important: make sure clock is input before doing this!
	      regutil -w LCD_CFG_SCLK_DIV=0x90000001
	      echo "installing chumby xilinx driver"
	      modprobe chumby_xilinx
	      sleep 1       # must give time for modprobe to make dev node
	      echo "configuring FPGA"
	      fpga_ctl r
	      cat /lib/firmware/hdmi_overlay.bin > /dev/fpga

              # turn off graphic layer
	      regutil -w LCD_SPU_DMA_CTRL0=0x08441011
	      # hard code alpha
	      regutil -w LCD_SPU_DMA_CTRL1=0x2001ff81

	      # maximize depth of LCD fifos
	      regutil -w LCD_MISC_CNTL=0x0  #0x5 to distress
	      # hard-code sync to active high
	      regutil -w LCD_SPU_DUMB_CTRL=0x210ff003
	      
	      echo "forcing attached mode to 720p"
	      sleep 1  # this may be removeable
	      putreg 0 0xc  # force HPD
	      modeline /lib/firmware/min720p.edid
	      sleep 1
	      putreg 0 4    # connect once

	      echo "deriving HDCP keys"
	      sleep 4       # this timeout can be optimized if we can figure out a way
	      derive_km     # to measure when the Km transaction is completed

	      echo "resetting link with acquired key"
	      putreg 0 0xc  # disconnect again
	      sleep 2
	      putreg 0 4    # connect again, this time with Km setup
	      
	      echo "setting box and sync"
	      sleep 2

	      echo "setting genlock lead and margin"
	      # the following magic numbers are chosen to pick about 6 line's depth buffering
	      # and "locked" to within about 2 lines depth
	      # these numbers changed based on resolution -- if not 720p, it's different
	      putreg 0x16 0x30  # 0x3000 pixels times to buffer
	      putreg 0x12 0x10  # within 0x1000 we'll call "locked"

	      putreg 3 0x45  # reset the genlock machine
	      putreg 3 0x25  # now run in normal mode with "smart genlocking" on
	      setbox 100 100 1080 520 # center an opening

	      ##############################
	      # Temporary hacks to get the board 'just work' for demo purpose
	      # See documentation here https://internal.chumby.com/wiki/index.php/NeTV

	      echo "resizing framebuffer using Flashplayer trick"
	      /etc/init.d/chumby-controlpanel.sh stop
	      mkfifo /dev/ts
	      chumbyflashplayer.x -x 1280 -y 720 -i /usr/widgets/controlpanel.swf &
	      regutil -w LCD_SPU_DMA_PITCH_YC=0x1400
	      sleep 2
	      killall chumbyflashplayer.x
	      sleep 1

	      echo "starting NeTVServer"
	      # hardcode the path for now until we have better place to put it
	      if [ -x /psp/netvserver/start_netvserver.sh ]; then
	          /psp/netvserver/start_netvserver.sh
	      fi
	      
	      echo "starting NeTVBrowser"
	      # hardcode the path for now until we have better place to put it
	      if [ -x /usr/bin/start_netvbrowser.sh ]; then
	          /usr/bin/start_netvbrowser.sh
	      fi
		;;

	stop)
	      echo "resetting FPGA and stopping"
	      fpga_ctl r
	      rmmod chumby_xilinx

	      echo "stopping NeTVServer"
	      # hardcode the path for now until we have better place to put it
	      if [ -x /psp/netvserver/stop_netvserver.sh ]; then
	          /psp/netvserver/stop_netvserver.sh
	      fi
	      
	      echo "stopping NeTVBrowser"
	      # hardcode the path for now until we have better place to put it
	      if [ -x /usr/bin/stop_netvbrowser.sh ]; then
	          /usr/bin/stop_netvbrowser.sh
	      fi
		;;

	*)
		echo "Usage: netv {start|stop}" >&2
		;;
esac
