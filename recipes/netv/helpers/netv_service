#!/bin/sh

# This code uses the BSD 2-clause license: http://www.opensource.org/licenses/bsd-license.php
#
# Copyright (c) 2011, Andrew "bunnie" Huang / bunnie@bunniestudios.com
# All rights reserved.

case "$1" in
	start)
	      ntpd -p pool.ntp.org  # really doesn't belong here but it's a convenient place to put it

	      # very important: make sure clock is input before doing this!
	      regutil -w LCD_CFG_SCLK_DIV=0x90000001
	      echo "installing chumby xilinx driver"
	      modprobe chumby_xilinx
	      sleep 1 # must give FPGA time to stabilize
	      echo "configuring FPGA"
	      fpga_ctl r
	      cat /lib/firmware/hdmi_overlay.bin > /dev/fpga

	      # maximize depth of LCD fifos
	      regutil -w LCD_MISC_CNTL=0x0  #0x5 to distress
	      # hard-code sync to active high
	      regutil -w LCD_SPU_DUMB_CTRL=0x210ff003
	      
	      echo "forcing attached mode to a supported EDID"
	      usleep 50000 
	      fpga_ctl h  # turn off HPD, customize_edid will do the HPD flipping for us

	      writecached_Km  &> /dev/null # write the cached Km in, if it exists

	      # this is the simple and arguably more reliable way to handle the
	      # EDID generation dynamically. Just re-derive it every time we startup.
	      customize_edid -f /psp/cached.edid  &> /dev/null

	      fpga_ctl E  # force EDID squashing
	      fpga_ctl H  # settle the link
	      sleep 1
	      echo "EDID derivation is traumatic. Settling the link"
	      fpga_ctl h 
	      echo "Still settling the link"
	      sleep 1
	      
	      echo "setting genlock lead and margin"
	      # the following magic numbers are chosen to pick about 6 line's depth buffering
	      # and "locked" to within about 2 lines depth
	      # these numbers basically work for all resolutions by and large, 480p might be iffy
	      putreg 0x16 0x30  # 0x3000 pixels times to buffer
	      putreg 0x12 0x10  # within 0x1000 we'll call "locked"

	      putreg 3 0x45  # reset the genlock machine
	      putreg 3 0x25  # now run in normal mode with "smart genlocking" on

	      # Km re-derivation is now called by an HPD event at this point
	      echo "starting matchmode daemon"
	      matchmoded

	      # temp fix for the pink line at the bottom
	      usleep 50000
	      regutil -w LCD_SPU_V_PORCH=0x50005 

	      fpga_ctl x i  # turn on chroma keying by default

		;;

	stop)
	      killall ntpd
	      echo "resetting FPGA and stopping"
	      fpga_ctl r
	      rmmod chumby_xilinx
	      killall matchmoded

		;;
    
    motor)
	killall matchmoded
	# very important: make sure clock is input before doing this!
	regutil -w LCD_CFG_SCLK_DIV=0x90000001
	echo "installing chumby xilinx driver"
	modprobe chumby_xilinx
	sleep 1 # must give FPGA time to stabilize
	echo "configuring FPGA"
	fpga_ctl r
	cat /lib/firmware/hdmi_motor.bin > /dev/fpga

	echo "Note configuration: motor driver on input side, 720p video on output side"
        # maximize depth of LCD fifos
	regutil -w LCD_MISC_CNTL=0x0  #0x5 to distress
	# hard-code sync to active high
	regutil -w LCD_SPU_DUMB_CTRL=0x210ff003

	sleep 1 # settle in the config
	mot_ctl A # now auto-detect if the board is present
	if [ "$?" -ne "0" ]; then
	    # failure, restart alternate mode
	    mot_ctl r
	    $0 start
	fi

	;;

    restart)
	$0 stop
	$0 start

	;;

	*)
		echo "Usage: $0 {start|stop|restart|motor}" >&2
		;;
esac
