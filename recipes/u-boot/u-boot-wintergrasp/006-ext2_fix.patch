diff -Nur u-boot-2009.08.orig/fs/ext2/ext2fs.c u-boot-2009.08/fs/ext2/ext2fs.c
--- u-boot-2009.08.orig/fs/ext2/ext2fs.c	2011-03-17 12:40:51.134601956 +0800
+++ u-boot-2009.08/fs/ext2/ext2fs.c	2011-05-24 16:47:12.520639138 +0800
@@ -178,6 +178,7 @@
 uint32_t *indir2_block = NULL;
 int indir2_size = 0;
 int indir2_blkno = -1;
+static unsigned int inode_size;
 
 
 static int ext2fs_blockgroup
@@ -212,7 +213,7 @@
 	unsigned int blkoff;
 
 #ifdef DEBUG
-	printf ("ext2fs read inode %d\n", ino);
+	printf ("ext2fs read inode %d, inode_size %d\n", ino, inode_size);
 #endif
 	/* It is easier to calculate if the first inode is 0.  */
 	ino--;
@@ -222,16 +223,12 @@
 		return (0);
 	}
 
-	inodes_per_block = EXT2_BLOCK_SIZE(data) / __le16_to_cpu(sblock->inode_size);
-
-#ifdef DEBUG
-	printf ("ext2fs read inode blkno %d blkoff %d\n", blkno, blkoff);
-#endif
+	inodes_per_block = EXT2_BLOCK_SIZE(data) / inode_size;
 
 	blkno = __le32_to_cpu (blkgrp.inode_table_id) +
 		(ino % __le32_to_cpu (sblock->inodes_per_group))
 		/ inodes_per_block;
-	blkoff = (ino % inodes_per_block) * __le16_to_cpu (sblock->inode_size);
+	blkoff = (ino % inodes_per_block) * inode_size;
 #ifdef DEBUG
 	printf ("ext2fs read inode blkno %d blkoff %d\n", blkno, blkoff);
 #endif
@@ -367,7 +364,7 @@
 			indir2_size = blksz;
 		}
 		if ((__le32_to_cpu (indir1_block[rblock / perblock]) <<
-		     log2_blksz) != indir1_blkno) {
+		     log2_blksz) != indir2_blkno) {
 			status = ext2fs_devread (__le32_to_cpu(indir1_block[rblock / perblock]) << log2_blksz,
 						 0, blksz,
 						 (char *) indir2_block);
@@ -417,6 +414,36 @@
 		if (blknr < 0) {
 			return (-1);
 		}
+
+                if ((i != (pos / blocksize)) &&
+                    (i != (blockcnt - 1)) &&
+                    blknr)
+                {
+                  #define MAX_CONT_BLK 2000
+
+                  int m, n, p, q;
+
+                  m = i;
+
+                  n = (blockcnt - 1) - m;
+
+                  if (n > MAX_CONT_BLK) n = MAX_CONT_BLK;
+
+                  for (p = 1; p < n; p++)
+                  {
+                    q = ext2fs_read_block(node, m + p);
+
+                    if (q < 0)
+                      return -1;
+
+                    if (q != (blknr + p))
+                      break;
+
+                    blockend += blocksize;
+                    i++;
+                  }
+                }
+
 		blknr = blknr << log2blocksize;
 
 		/* Last block.  */
@@ -447,7 +474,7 @@
 		} else {
 			memset (buf, 0, blocksize - skipfirst);
 		}
-		buf += blocksize - skipfirst;
+		buf += blockend;
 	}
 	return (len);
 }
@@ -752,7 +779,7 @@
 }
 
 
-int ext2fs_ls (char *dirname) {
+int ext2fs_ls (const char *dirname) {
 	ext2fs_node_t dirnode;
 	int status;
 
@@ -772,7 +799,7 @@
 }
 
 
-int ext2fs_open (char *filename) {
+int ext2fs_open (const char *filename) {
 	ext2fs_node_t fdiro = NULL;
 	int status;
 	int len;
@@ -863,6 +890,15 @@
 	if (__le16_to_cpu (data->sblock.magic) != EXT2_MAGIC) {
 		goto fail;
 	}
+	if (__le32_to_cpu(data->sblock.revision_level == 0)) {
+		inode_size = 128;
+	} else {
+		inode_size = __le16_to_cpu(data->sblock.inode_size);
+	}
+#ifdef DEBUG
+	printf("EXT2 rev %d, inode_size %d\n",
+			__le32_to_cpu(data->sblock.revision_level), inode_size);
+#endif
 	data->diropen.data = data;
 	data->diropen.ino = 2;
 	data->diropen.inode_read = 1;
diff -Nur u-boot-2009.08.orig/fs/ext2/Makefile u-boot-2009.08/fs/ext2/Makefile
--- u-boot-2009.08.orig/fs/ext2/Makefile	2011-03-17 12:40:51.134601956 +0800
+++ u-boot-2009.08/fs/ext2/Makefile	2011-03-25 11:06:32.775550439 +0800
@@ -35,7 +35,7 @@
 SRCS	:= $(AOBJS:.o=.S) $(COBJS-y:.o=.c)
 OBJS	:= $(addprefix $(obj),$(AOBJS) $(COBJS-y))
 
-#CPPFLAGS +=
+CFLAGS += -O -fno-forward-propagate
 
 all:	$(LIB) $(AOBJS)
 
diff -Nur u-boot-2009.08.orig/include/ext2fs.h u-boot-2009.08/include/ext2fs.h
--- u-boot-2009.08.orig/include/ext2fs.h	2011-03-17 12:40:54.327924976 +0800
+++ u-boot-2009.08/include/ext2fs.h	2011-03-25 11:09:00.618228062 +0800
@@ -74,8 +74,8 @@
 
 
 extern int ext2fs_set_blk_dev(block_dev_desc_t *rbdd, int part);
-extern int ext2fs_ls (char *dirname);
-extern int ext2fs_open (char *filename);
+extern int ext2fs_ls (const char *dirname);
+extern int ext2fs_open (const char *filename);
 extern int ext2fs_read (char *buf, unsigned len);
 extern int ext2fs_mount (unsigned part_length);
 extern int ext2fs_close(void);
