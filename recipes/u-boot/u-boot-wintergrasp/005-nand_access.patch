diff -Nur u-boot-2009.08.patchbeforenand//board/freescale/wintergrasp/wintergrasp.c u-boot-2009.08/board/freescale/wintergrasp/wintergrasp.c
--- u-boot-2009.08.patchbeforenand//board/freescale/wintergrasp/wintergrasp.c	2011-06-20 16:03:36.581744033 +0800
+++ u-boot-2009.08/board/freescale/wintergrasp/wintergrasp.c	2011-06-20 16:08:09.067912160 +0800
@@ -30,6 +30,10 @@
 #include <mmc.h>
 #include <imx_ssp_mmc.h>
 
+#ifdef CONFIG_NAND_GPMI
+void setup_gpmi_nand();
+#endif
+
 DECLARE_GLOBAL_DATA_PTR;
 
 #ifdef CONFIG_IMX_SSP_MMC
diff -Nur u-boot-2009.08.patchbeforenand//cpu/arm926ejs/mx28/generic.c u-boot-2009.08/cpu/arm926ejs/mx28/generic.c
--- u-boot-2009.08.patchbeforenand//cpu/arm926ejs/mx28/generic.c	2011-06-20 16:03:36.691799031 +0800
+++ u-boot-2009.08/cpu/arm926ejs/mx28/generic.c	2011-06-20 16:03:48.551058730 +0800
@@ -108,6 +108,8 @@
 static inline void __enable_gpmi_clk(void)
 {
 	/* Clear bypass bit*/
+
+#if 0
 	REG_SET(REGS_CLKCTRL_BASE, HW_CLKCTRL_CLKSEQ,
 	       BM_CLKCTRL_CLKSEQ_BYPASS_GPMI);
 	/* Set gpmi clock to ref_gpmi/12 */
@@ -116,6 +118,42 @@
 	      (~(BM_CLKCTRL_GPMI_DIV)) &
 	      (~(BM_CLKCTRL_GPMI_CLKGATE)) |
 	      1);
+#else
+  static int init = 0;
+  int m;
+
+  if (!init)
+  {
+    m = REG_RD(REGS_CLKCTRL_BASE, HW_CLKCTRL_FRAC1);
+    m &= ~BM_CLKCTRL_FRAC1_GPMIFRAC;
+    m &= ~BM_CLKCTRL_FRAC1_CLKGATEGPMI;
+    m |= 18 << BP_CLKCTRL_FRAC1_GPMIFRAC;
+    REG_WR(REGS_CLKCTRL_BASE, HW_CLKCTRL_FRAC1, m);
+
+    REG_CLR(REGS_CLKCTRL_BASE, HW_CLKCTRL_CLKSEQ,
+           BM_CLKCTRL_CLKSEQ_BYPASS_GPMI);
+
+    m = REG_RD(REGS_CLKCTRL_BASE, HW_CLKCTRL_GPMI);
+    m &= ~BM_CLKCTRL_GPMI_DIV;
+    m &= ~BM_CLKCTRL_GPMI_DIV_FRAC_EN;
+    m &= ~BM_CLKCTRL_GPMI_CLKGATE;
+
+    /* Set gpmi clock to ref_gpmi/6 */
+    m |= 6;
+
+    REG_WR(REGS_CLKCTRL_BASE, HW_CLKCTRL_GPMI, m);
+
+    while (1)
+    {
+      if (!(REG_RD(REGS_CLKCTRL_BASE, HW_CLKCTRL_GPMI) &
+            BM_CLKCTRL_GPMI_BUSY))
+        break;
+    }
+
+    init = 1;
+  }
+#endif
+
 }
 static u32 mx28_get_gpmiclk(void)
 {
diff -Nur u-boot-2009.08.patchbeforenand//drivers/mtd/mtdpart.c u-boot-2009.08/drivers/mtd/mtdpart.c
--- u-boot-2009.08.patchbeforenand//drivers/mtd/mtdpart.c	2011-06-20 16:03:36.921914024 +0800
+++ u-boot-2009.08/drivers/mtd/mtdpart.c	2011-06-20 16:03:48.551058730 +0800
@@ -371,8 +371,12 @@
 	if (slave->mtd.size == MTDPART_SIZ_FULL)
 		slave->mtd.size = master->size - slave->offset;
 
-	printk(KERN_NOTICE "0x%012llx-0x%012llx : \"%s\"\n", (unsigned long long)slave->offset,
-		(unsigned long long)(slave->offset + slave->mtd.size), slave->mtd.name);
+	printk(KERN_NOTICE "0x%08x%08x-0x%08x%08x : \"%s\"\n",
+         (int) (slave->offset >> 32),
+         (int) (slave->offset & 0xffffffff),
+         (int) ((slave->offset + slave->mtd.size) >> 32),
+         (int) ((slave->offset + slave->mtd.size) & 0xffffffff),
+         slave->mtd.name);
 
 	/* let's do some sanity checks */
 	if (slave->offset >= master->size) {
diff -Nur u-boot-2009.08.patchbeforenand//drivers/mtd/nand/gpmi_nfc_hal.c u-boot-2009.08/drivers/mtd/nand/gpmi_nfc_hal.c
--- u-boot-2009.08.patchbeforenand//drivers/mtd/nand/gpmi_nfc_hal.c	2011-06-20 16:03:36.918579024 +0800
+++ u-boot-2009.08/drivers/mtd/nand/gpmi_nfc_hal.c	2011-06-20 16:03:48.551058730 +0800
@@ -40,9 +40,17 @@
 static struct mxs_dma_desc *dma_desc[NFC_DMA_DESCRIPTOR_COUNT];
 
 static struct gpmi_nfc_timing  safe_timing = {
+
+#if 0
 	.m_u8DataSetup		= 80,
 	.m_u8DataHold		= 60,
 	.m_u8AddressSetup		= 25,
+#else
+	.m_u8DataSetup		= 30,
+	.m_u8DataHold		= 25,
+	.m_u8AddressSetup		= 10,
+#endif
+
 	.m_u8HalfPeriods		= 0,
 	.m_u8SampleDelay		= 6,
 	.m_u8NandTimingState	= 0,
@@ -766,6 +774,15 @@
  */
 static void begin(struct mtd_info *mtd)
 {
+
+#if 1
+  static int init = 0;
+
+  if (!init)
+  {
+    init = 1;
+#endif
+
 	struct nand_chip *chip = mtd->priv;
 	struct gpmi_nfc_info *gpmi_info = chip->priv;
 	struct nfc_hal         *nfc =  gpmi_info->nfc;
@@ -843,6 +860,11 @@
 
 	/* Coming soon - the clock handling code isn't ready yet. */
 	MTDDEBUG(MTD_DEBUG_LEVEL3, "<= %s\n", __func__);
+
+#if 1
+  }
+#endif
+
 }
 
 /**
diff -Nur u-boot-2009.08.patchbeforenand//drivers/mtd/nand/gpmi_nfc_mil.c u-boot-2009.08/drivers/mtd/nand/gpmi_nfc_mil.c
--- u-boot-2009.08.patchbeforenand//drivers/mtd/nand/gpmi_nfc_mil.c	2011-06-20 16:03:36.921914024 +0800
+++ u-boot-2009.08/drivers/mtd/nand/gpmi_nfc_mil.c	2011-06-20 16:03:48.551058730 +0800
@@ -1023,6 +1023,7 @@
 	mtd->block_markbad              = gpmi_nfc_hook_block_markbad;
 
 	/* We use the reference implementation for bad block management. */
+  //BLL it goes here
 	error = nand_default_bbt(mtd);
 	if (error)
 		return error;
diff -Nur u-boot-2009.08.patchbeforenand//drivers/mtd/nand/nand_bbt.c u-boot-2009.08/drivers/mtd/nand/nand_bbt.c
--- u-boot-2009.08.patchbeforenand//drivers/mtd/nand/nand_bbt.c	2011-06-20 16:03:36.921914024 +0800
+++ u-boot-2009.08/drivers/mtd/nand/nand_bbt.c	2011-06-20 16:03:48.554393730 +0800
@@ -987,6 +987,7 @@
 	 * to build a memory based bad block table
 	 */
 	if (!td) {
+    //BLL it goes here
 		if ((res = nand_memory_bbt(mtd, bd))) {
 			printk(KERN_ERR "nand_bbt: Can't scan flash and build the RAM-based BBT\n");
 			kfree(this->bbt);
diff -Nur u-boot-2009.08.patchbeforenand//include/configs/wintergrasp.h u-boot-2009.08/include/configs/wintergrasp.h
--- u-boot-2009.08.patchbeforenand//include/configs/wintergrasp.h	2011-06-20 16:03:36.655114032 +0800
+++ u-boot-2009.08/include/configs/wintergrasp.h	2011-06-20 16:05:09.548201672 +0800
@@ -80,11 +80,23 @@
         "bootargs_mmc=setenv bootargs " \
                 "${bootargs} " \
                 "root=/dev/mmcblk0p2 rw rootwait " \
-                "fec_mac=${ethaddr} " \
+                "gpmi " \
                 "loglevel=10 printk.time=1\0" \
         "bootcmd_mmc=run bootargs_mmc; " \
                 "ext2load mmc 0:2 ${loadaddr} /boot/${bootfile}; " \
                 "bootm\0" \
+        "mtdids=nand0=gpmi-nfc\0" \
+        "mtdparts=mtdparts=gpmi-nfc:0x1400000@0x0(gpmi-nfc-0-boot)ro,0xec00000@0x1400000(gpmi-nfc-general-use)ro\0" \
+        "bootargs_mtd=setenv bootargs " \
+                "${bootargs} " \
+                "ubi.mtd=1 root=ubi0:rootfs rw rootfstype=ubifs rootwait " \
+                "gpmi " \
+                "loglevel=10 printk.time=1\0" \
+        "bootcmd_mtd=run bootargs_mtd; " \
+                "ubi part gpmi-nfc-general-use; " \
+                "ubifsmount rootfs; " \
+                "ubifsload ${loadaddr} /boot/${bootfile}; " \
+                "bootm\0" \
 
 /*
  * U-Boot Commands
@@ -123,6 +135,7 @@
  * MMC Driver
  */
 #define CONFIG_CMD_MMC
+#define ENABLE_NAND
 
 #ifdef CONFIG_CMD_MMC
 	#define CONFIG_MMC
@@ -131,14 +144,21 @@
 	#define CONFIG_DYNAMIC_MMC_DEVNO
 	#define CONFIG_DOS_PARTITION
 	#define CONFIG_CMD_FAT
+
+#ifdef ENABLE_NAND
+	#define CONFIG_SYS_SSP_MMC_NUM 1
+#else
 	#define CONFIG_SYS_SSP_MMC_NUM 2
+#endif
+
 	#define CONFIG_CMD_EXT2
 #endif
 
 /*
  * GPMI Nand Configs
  */
-#ifndef CONFIG_CMD_MMC	/* NAND conflict with MMC */
+#if !defined(CONFIG_CMD_MMC) || \
+    (defined(CONFIG_CMD_MMC) && (CONFIG_SYS_SSP_MMC_NUM == 1))
 
 #define CONFIG_CMD_NAND
 
@@ -153,6 +173,15 @@
 	#define NAND_MAX_CHIPS		8
 	#define CONFIG_SYS_NAND_BASE		0x40000000
 	#define CONFIG_SYS_MAX_NAND_DEVICE	1
+
+  #define CONFIG_MTD_DEVICE
+  #define CONFIG_MTD_PARTITIONS
+  #define CONFIG_CMD_MTDPARTS
+
+  #define CONFIG_LZO
+  #define CONFIG_RBTREE
+  #define CONFIG_CMD_UBI
+  #define CONFIG_CMD_UBIFS
 #endif
 
 /*
