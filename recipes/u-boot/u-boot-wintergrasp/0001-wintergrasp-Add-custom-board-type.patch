From f8b9a481a8e23ca839fe5df113218560f2195c5b Mon Sep 17 00:00:00 2001
From: Sean Cross <sean@chumby.com>
Date: Sat, 7 May 2011 12:57:25 +0800
Subject: [PATCH 1/5] wintergrasp: Add custom board type

---
 board/freescale/wintergrasp/Makefile        |   52 +++++
 board/freescale/wintergrasp/config.mk       |    6 +
 board/freescale/wintergrasp/lowlevel_init.S |   36 ++++
 board/freescale/wintergrasp/u-boot.lds      |   51 +++++
 board/freescale/wintergrasp/wintergrasp.c   |  285 +++++++++++++++++++++++++++
 include/configs/wintergrasp.h               |  204 +++++++++++++++++++
 6 files changed, 634 insertions(+), 0 deletions(-)
 create mode 100644 board/freescale/wintergrasp/Makefile
 create mode 100644 board/freescale/wintergrasp/config.mk
 create mode 100644 board/freescale/wintergrasp/lowlevel_init.S
 create mode 100644 board/freescale/wintergrasp/u-boot.lds
 create mode 100644 board/freescale/wintergrasp/wintergrasp.c
 create mode 100644 include/configs/wintergrasp.h

diff --git a/board/freescale/wintergrasp/Makefile b/board/freescale/wintergrasp/Makefile
new file mode 100644
index 0000000..bb9fc16
--- /dev/null
+++ b/board/freescale/wintergrasp/Makefile
@@ -0,0 +1,52 @@
+#
+# (C) Copyright 2000-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	:= wintergrasp.o
+SOBJS	:= lowlevel_init.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
+
diff --git a/board/freescale/wintergrasp/config.mk b/board/freescale/wintergrasp/config.mk
new file mode 100644
index 0000000..7b57ec3
--- /dev/null
+++ b/board/freescale/wintergrasp/config.mk
@@ -0,0 +1,6 @@
+#
+# image should be loaded at 0x41008000
+#
+LDSCRIPT := $(SRCTREE)/board/$(VENDOR)/$(BOARD)/u-boot.lds
+
+TEXT_BASE = 0x41008000
diff --git a/board/freescale/wintergrasp/lowlevel_init.S b/board/freescale/wintergrasp/lowlevel_init.S
new file mode 100644
index 0000000..1c62a31
--- /dev/null
+++ b/board/freescale/wintergrasp/lowlevel_init.S
@@ -0,0 +1,36 @@
+/*
+ * Board specific setup info
+ *
+ * Copyright (C) 2010 Freescale Semiconductor, Inc.
+ *
+ * (C) Copyright 2003, ARM Ltd.
+ * Philippe Robin, <philippe.robin@arm.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <config.h>
+#include <version.h>
+
+/* Set up the platform, once the cpu has been initialized */
+.globl lowlevel_init
+lowlevel_init:
+
+	/* All SDRAM settings are done by sdram_prep */
+	mov pc, lr
diff --git a/board/freescale/wintergrasp/u-boot.lds b/board/freescale/wintergrasp/u-boot.lds
new file mode 100644
index 0000000..b7efe6d
--- /dev/null
+++ b/board/freescale/wintergrasp/u-boot.lds
@@ -0,0 +1,51 @@
+/*
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <gj@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x00000000;
+	. = ALIGN(4);
+	.text	:
+	{
+	  cpu/arm926ejs/start.o (.text)
+	  *(.text)
+	}
+	.rodata : { *(.rodata) }
+	. = ALIGN(4);
+	.data : { *(.data) }
+	. = ALIGN(4);
+	.got : { *(.got) }
+
+	. = .;
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+	. = ALIGN(4);
+	__bss_start = .;
+	.bss (NOLOAD) : { *(.bss) }
+	_end = .;
+}
diff --git a/board/freescale/wintergrasp/wintergrasp.c b/board/freescale/wintergrasp/wintergrasp.c
new file mode 100644
index 0000000..549ab12
--- /dev/null
+++ b/board/freescale/wintergrasp/wintergrasp.c
@@ -0,0 +1,285 @@
+/*
+ * Copyright (C) 2010 Freescale Semiconductor, Inc.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/arch/regs-pinctrl.h>
+#include <asm/arch/pinctrl.h>
+#include <asm/arch/regs-clkctrl.h>
+#include <asm/arch/regs-ocotp.h>
+
+#include <mmc.h>
+#include <imx_ssp_mmc.h>
+
+/* This should be removed after it's added into mach-types.h */
+#ifndef MACH_TYPE_WINTERGRASP
+#define MACH_TYPE_WINTERGRASP	3500
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#ifdef CONFIG_IMX_SSP_MMC
+
+/* MMC pins */
+static struct pin_desc mmc0_pins_desc[] = {
+	{ PINID_SSP0_DATA0, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA1, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA2, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA3, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA4, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA5, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA6, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DATA7, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_CMD, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_SSP0_DETECT, PIN_FUN1, PAD_8MA, PAD_3V3, 0 },
+	{ PINID_SSP0_SCK, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+};
+
+static struct pin_desc mmc1_pins_desc[] = {
+	{ PINID_GPMI_D00, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D01, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D02, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D03, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D04, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D05, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D06, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_D07, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_RDY1, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_RDY0, PIN_FUN2, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_GPMI_WRN, PIN_FUN2, PAD_8MA, PAD_3V3, 1 }
+};
+
+static struct pin_group mmc0_pins = {
+	.pins		= mmc0_pins_desc,
+	.nr_pins	= ARRAY_SIZE(mmc0_pins_desc)
+};
+
+static struct pin_group mmc1_pins = {
+	.pins		= mmc1_pins_desc,
+	.nr_pins	= ARRAY_SIZE(mmc1_pins_desc)
+};
+
+struct imx_ssp_mmc_cfg ssp_mmc_cfg[2] = {
+	{REGS_SSP0_BASE, HW_CLKCTRL_SSP0, BM_CLKCTRL_CLKSEQ_BYPASS_SSP0},
+	{REGS_SSP1_BASE, HW_CLKCTRL_SSP1, BM_CLKCTRL_CLKSEQ_BYPASS_SSP1},
+};
+#endif
+
+/* ENET pins */
+static struct pin_desc enet_pins_desc[] = {
+	{ PINID_ENET0_MDC, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_MDIO, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_RX_EN, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_RXD0, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_RXD1, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_TX_EN, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_TXD0, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET0_TXD1, PIN_FUN1, PAD_8MA, PAD_3V3, 1 },
+	{ PINID_ENET_CLK, PIN_FUN1, PAD_8MA, PAD_3V3, 1 }
+};
+
+/* Gpmi pins */
+static struct pin_desc gpmi_pins_desc[] = {
+	{ PINID_GPMI_D00, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D01, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D02, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D03, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D04, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D05, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D06, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_D07, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_RDN, PIN_FUN1, PAD_8MA, PAD_1V8, 1 },
+	{ PINID_GPMI_WRN, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_ALE, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_CLE, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_RDY0, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_RDY1, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_CE0N, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_CE1N, PIN_FUN1, PAD_4MA, PAD_3V3, 0 },
+	{ PINID_GPMI_RESETN, PIN_FUN1, PAD_4MA, PAD_3V3, 0 }
+};
+static struct pin_group enet_pins = {
+	.pins		= enet_pins_desc,
+	.nr_pins	= ARRAY_SIZE(enet_pins_desc)
+};
+static struct pin_group gpmi_pins = {
+	.pins		= gpmi_pins_desc,
+	.nr_pins	= ARRAY_SIZE(gpmi_pins_desc)
+};
+
+/*
+ * Functions
+ */
+int board_init(void)
+{
+	/* Will change it for MX28 EVK later */
+	gd->bd->bi_arch_number = MACH_TYPE_WINTERGRASP;
+	/* Adress of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
+#ifdef CONFIG_NAND_GPMI
+	setup_gpmi_nand();
+#endif
+	return 0;
+}
+
+int dram_init(void)
+{
+	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
+	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
+
+	return 0;
+}
+
+#ifdef CONFIG_IMX_SSP_MMC
+
+#ifdef CONFIG_DYNAMIC_MMC_DEVNO
+int get_mmc_env_devno()
+{
+	unsigned long global_boot_mode;
+
+	global_boot_mode = REG_RD_ADDR(GLOBAL_BOOT_MODE_ADDR);
+	return ((global_boot_mode & 0xf) == BOOT_MODE_SD1) ? 1 : 0;
+}
+#endif
+
+#define PINID_SSP0_GPIO_WP PINID_SSP1_SCK
+#define PINID_SSP1_GPIO_WP PINID_GPMI_RESETN
+
+u32 ssp_mmc_is_wp(struct mmc *mmc)
+{
+	return 0;
+}
+
+int ssp_mmc_gpio_init(bd_t *bis)
+{
+	s32 status = 0;
+	u32 index = 0;
+
+	for (index = 0; index < CONFIG_SYS_SSP_MMC_NUM;
+		++index) {
+		switch (index) {
+		case 0:
+			/* Set up MMC pins */
+			pin_set_group(&mmc0_pins);
+
+			/* Power on the card slot 0 */
+			pin_set_type(PINID_PWM3, PIN_GPIO);
+			pin_gpio_direction(PINID_PWM3, 1);
+			pin_gpio_set(PINID_PWM3, 0);
+
+			/* Wait 10 ms for card ramping up */
+			udelay(10000);
+
+			/* Set up SD0 WP pin */
+			pin_set_type(PINID_SSP0_GPIO_WP, PIN_GPIO);
+			pin_gpio_direction(PINID_SSP0_GPIO_WP, 0);
+
+			break;
+		case 1:
+#ifdef CONFIG_CMD_MMC
+			/* Set up MMC pins */
+			pin_set_group(&mmc1_pins);
+
+			/* Power on the card slot 1 */
+			pin_set_type(PINID_PWM4, PIN_GPIO);
+			pin_gpio_direction(PINID_PWM4, 1);
+			pin_gpio_set(PINID_PWM4, 0);
+
+			/* Wait 10 ms for card ramping up */
+			udelay(10000);
+
+			/* Set up SD1 WP pin */
+			pin_set_type(PINID_SSP1_GPIO_WP, PIN_GPIO);
+			pin_gpio_direction(PINID_SSP1_GPIO_WP, 0);
+#endif
+			break;
+		default:
+			printf("Warning: you configured more ssp mmc controller"
+				"(%d) as supported by the board(2)\n",
+				CONFIG_SYS_SSP_MMC_NUM);
+			return status;
+		}
+		status |= imx_ssp_mmc_initialize(bis, &ssp_mmc_cfg[index]);
+	}
+
+	return status;
+}
+
+int board_mmc_init(bd_t *bis)
+{
+	if (!ssp_mmc_gpio_init(bis))
+		return 0;
+	else
+		return -1;
+}
+
+#endif
+
+#ifdef CONFIG_MXC_FEC
+#ifdef CONFIG_GET_FEC_MAC_ADDR_FROM_IIM
+int fec_get_mac_addr(unsigned char *mac)
+{
+	u32 val;
+
+	/*set this bit to open the OTP banks for reading*/
+	REG_WR(REGS_OCOTP_BASE, HW_OCOTP_CTRL_SET,
+		BM_OCOTP_CTRL_RD_BANK_OPEN);
+
+	/*wait until OTP contents are readable*/
+	while (BM_OCOTP_CTRL_BUSY & REG_RD(REGS_OCOTP_BASE, HW_OCOTP_CTRL))
+		udelay(100);
+
+	mac[0] = 0x00;
+	mac[1] = 0x04;
+	val = REG_RD(REGS_OCOTP_BASE, HW_OCOTP_CUSTn(0));
+	mac[2] = (val >> 24) & 0xFF;
+	mac[3] = (val >> 16) & 0xFF;
+	mac[4] = (val >> 8) & 0xFF;
+	mac[5] = (val >> 0) & 0xFF;
+	return 0;
+}
+#endif
+#endif
+
+void enet_board_init(void)
+{
+	/* Set up ENET pins */
+	pin_set_group(&enet_pins);
+
+	/* Power on the external phy */
+	pin_set_type(PINID_SSP1_DATA3, PIN_GPIO);
+	pin_gpio_direction(PINID_SSP1_DATA3, 1);
+	pin_gpio_set(PINID_SSP1_DATA3, 0);
+
+	/* Reset the external phy */
+	pin_set_type(PINID_ENET0_RX_CLK, PIN_GPIO);
+	pin_gpio_direction(PINID_ENET0_RX_CLK, 1);
+	pin_gpio_set(PINID_ENET0_RX_CLK, 0);
+	udelay(200);
+	pin_gpio_set(PINID_ENET0_RX_CLK, 1);
+}
+#ifdef CONFIG_NAND_GPMI
+void setup_gpmi_nand()
+{
+	/* Set up GPMI pins */
+	pin_set_group(&gpmi_pins);
+}
+#endif
diff --git a/include/configs/wintergrasp.h b/include/configs/wintergrasp.h
new file mode 100644
index 0000000..ed8becf
--- /dev/null
+++ b/include/configs/wintergrasp.h
@@ -0,0 +1,204 @@
+/*
+ * Copyright (C) 2010 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#ifndef __MX28_EVK_H
+#define __MX28_EVK_H
+
+#include <asm/arch/mx28.h>
+
+/*
+ * SoC configurations
+ */
+#define CONFIG_MX28				/* i.MX28 SoC */
+#define CONFIG_MX28_TO1_2
+#define CONFIG_SYS_HZ		1000		/* Ticks per second */
+/* ROM loads UBOOT into DRAM */
+#define CONFIG_SKIP_RELOCATE_UBOOT
+
+/*
+ * Memory configurations
+ */
+#define CONFIG_NR_DRAM_BANKS	1		/* 1 bank of DRAM */
+#define PHYS_SDRAM_1		0x40000000	/* Base address */
+#define PHYS_SDRAM_1_SIZE	0x08000000	/* 128 MB */
+#define CONFIG_STACKSIZE	0x00020000	/* 128 KB stack */
+#define CONFIG_SYS_MALLOC_LEN	0x00400000	/* 4 MB for malloc */
+#define CONFIG_SYS_GBL_DATA_SIZE 128		/* Reserved for initial data */
+#define CONFIG_SYS_MEMTEST_START 0x40000000	/* Memtest start address */
+#define CONFIG_SYS_MEMTEST_END	 0x40400000	/* 4 MB RAM test */
+
+/*
+ * U-Boot general configurations
+ */
+#define CONFIG_SYS_LONGHELP
+#define CONFIG_SYS_PROMPT	"MX28 U-Boot > "
+#define CONFIG_SYS_CBSIZE	1024		/* Console I/O buffer size */
+#define CONFIG_SYS_PBSIZE \
+	(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+						/* Print buffer size */
+#define CONFIG_SYS_MAXARGS	16		/* Max number of command args */
+#define CONFIG_SYS_BARGSIZE	CONFIG_SYS_CBSIZE
+						/* Boot argument buffer size */
+#define CONFIG_VERSION_VARIABLE			/* U-BOOT version */
+#define CONFIG_AUTO_COMPLETE			/* Command auto complete */
+#define CONFIG_CMDLINE_EDITING			/* Command history etc */
+
+#define CONFIG_SYS_64BIT_VSPRINTF
+
+/*
+ * Boot Linux
+ */
+#define CONFIG_CMDLINE_TAG
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_BOOTDELAY	3
+#define CONFIG_BOOTFILE		uImage
+#define CONFIG_BOOTARGS		"console=ttyAM0,115200n8 "
+#define CONFIG_BOOTCOMMAND	"run bootcmd_mmc"
+#define CONFIG_LOADADDR		0x42000000
+#define CONFIG_SYS_LOAD_ADDR	CONFIG_LOADADDR
+
+/*
+ * Extra Environments
+ */
+#define	CONFIG_EXTRA_ENV_SETTINGS \
+        "autoload=n\0" \
+        "bootargs_mmc=setenv bootargs " \
+                "${bootargs} " \
+                "root=/dev/mmcblk0p2 rw rootwait " \
+                "ip=dhcp fec_mac=${ethaddr} gpmi\0" \
+        "bootcmd_mmc=run bootargs_mmc; " \
+                "ext2load mmc 0:2 ${loadaddr} /boot/${bootfile}; " \
+                "bootm\0" \
+
+/*
+ * U-Boot Commands
+ */
+#define CONFIG_SYS_NO_FLASH
+#include <config_cmd_default.h>
+#define CONFIG_ARCH_CPU_INIT
+#define CONFIG_DISPLAY_CPUINFO
+
+/*
+ * Serial Driver
+ */
+#define CONFIG_UARTDBG_CLK		24000000
+#define CONFIG_BAUDRATE			115200		/* Default baud rate */
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 9600, 19200, 38400, 57600, 115200 }
+
+/*
+ * FEC Driver
+ */
+#define CONFIG_MXC_FEC
+#define CONFIG_GET_FEC_MAC_ADDR_FROM_IIM
+#define CONFIG_FEC0_IOBASE		REGS_ENET_BASE
+#define CONFIG_FEC0_PHY_ADDR		0
+#define CONFIG_NET_MULTI
+#define CONFIG_ETH_PRIME
+#define CONFIG_RMII
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_DHCP
+#define CONFIG_CMD_PING
+/* Add for working with "strict" DHCP server */
+#define CONFIG_BOOTP_SUBNETMASK
+#define CONFIG_BOOTP_GATEWAY
+#define CONFIG_BOOTP_DNS
+
+/*
+ * MMC Driver
+ */
+#define CONFIG_CMD_MMC
+
+#ifdef CONFIG_CMD_MMC
+	#define CONFIG_MMC
+	#define CONFIG_IMX_SSP_MMC		/* MMC driver based on SSP */
+	#define CONFIG_GENERIC_MMC
+	#define CONFIG_DYNAMIC_MMC_DEVNO
+	#define CONFIG_DOS_PARTITION
+	#define CONFIG_CMD_FAT
+	#define CONFIG_SYS_SSP_MMC_NUM 2
+	#define CONFIG_CMD_EXT2
+#endif
+
+/*
+ * GPMI Nand Configs
+ */
+#ifndef CONFIG_CMD_MMC	/* NAND conflict with MMC */
+
+#define CONFIG_CMD_NAND
+
+#ifdef CONFIG_CMD_NAND
+	#define CONFIG_NAND_GPMI
+	#define CONFIG_GPMI_NFC_SWAP_BLOCK_MARK
+	#define CONFIG_GPMI_NFC_V1
+
+	#define CONFIG_GPMI_REG_BASE	GPMI_BASE_ADDR
+	#define CONFIG_BCH_REG_BASE	BCH_BASE_ADDR
+
+	#define NAND_MAX_CHIPS		8
+	#define CONFIG_SYS_NAND_BASE		0x40000000
+	#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#endif
+
+/*
+ * APBH DMA Configs
+ */
+#define CONFIG_APBH_DMA
+
+#ifdef CONFIG_APBH_DMA
+	#define CONFIG_APBH_DMA_V1
+	#define CONFIG_MXS_DMA_REG_BASE ABPHDMA_BASE_ADDR
+#endif
+
+#endif
+
+/*
+ * Environments
+ */
+#define CONFIG_FSL_ENV_IN_MMC
+
+#define CONFIG_CMD_ENV
+#define CONFIG_ENV_OVERWRITE
+
+#if defined(CONFIG_FSL_ENV_IN_NAND)
+	#define CONFIG_ENV_IS_IN_NAND 1
+	#define CONFIG_ENV_OFFSET	0x1400000 /* Nand env, offset: 20M */
+	#define CONFIG_ENV_SECT_SIZE    (128 * 1024)
+	#define CONFIG_ENV_SIZE         CONFIG_ENV_SECT_SIZE
+#elif defined(CONFIG_FSL_ENV_IN_MMC)
+	#define CONFIG_ENV_IS_IN_MMC	1
+	/* Assoiated with the MMC layout defined in mmcops.c */
+	#define CONFIG_ENV_OFFSET               (0x800 + 512) /* 2 KB  + 512 (MBR + SBMAGIC) */
+	#define CONFIG_ENV_SIZE                 (0x20000 - 0x400) /* 127 KB */
+#else
+	#define CONFIG_ENV_IS_NOWHERE	1
+#endif
+
+/* The global boot mode will be detected by ROM code and
+ * a boot mode value will be stored at fixed address:
+ * TO1.0 addr 0x0001a7f0
+ * TO1.2 addr 0x00019BF0
+ */
+#ifndef MX28_EVK_TO1_0
+ #define GLOBAL_BOOT_MODE_ADDR 0x00019BF0
+#else
+ #define GLOBAL_BOOT_MODE_ADDR 0x0001a7f0
+#endif
+#define BOOT_MODE_SD0 0x9
+#define BOOT_MODE_SD1 0xa
+
+#endif /* __MX28_EVK_H */
-- 
1.7.1

