From 9e1999a8d029bdeda9d67a27382f60eb0eee91bd Mon Sep 17 00:00:00 2001
From: Mingliang Hu <mhu4@marvell.com>
Date: Tue, 6 Jul 2010 18:31:19 +0800
Subject: [PATCH] mmp2: add brownstone support

Signed-off-by: Mingliang Hu <mhu4@marvell.com>
---
 Makefile                               |    6 +
 board/pxa/brownstone/Makefile          |   49 ++++
 board/pxa/brownstone/brownstone.c      |  418 ++++++++++++++++++++++++++++++++
 board/pxa/brownstone/config.mk         |   14 +
 board/pxa/brownstone/u-boot.lds        |   50 ++++
 board/pxa/common/freq.c                |   19 +-
 board/pxa/common/freq_ll.S             |   79 ++++++-
 drivers/mmc/pxa9xx_sdh.c               |    2 +-
 include/configs/mmp2_brownstone.h      |  253 +++++++++++++++++++
 include/configs/mmp2_brownstone_emmc.h |   43 ++++
 10 files changed, 921 insertions(+), 12 deletions(-)
 create mode 100644 board/pxa/brownstone/Makefile
 create mode 100644 board/pxa/brownstone/brownstone.c
 create mode 100644 board/pxa/brownstone/config.mk
 create mode 100644 board/pxa/brownstone/u-boot.lds
 create mode 100644 include/configs/mmp2_brownstone.h
 create mode 100644 include/configs/mmp2_brownstone_emmc.h

diff --git a/Makefile b/Makefile
index 74ec2bd..8538d62 100644
--- a/Makefile
+++ b/Makefile
@@ -3000,6 +3000,12 @@ mmp2_jasper_epd512_config      :       unconfig
 
 mmp2_jasper_epd512_emmc_config :       unconfig
 	@$(MKCONFIG) $(@:_config=) arm 88SV581xV6 jasper pxa pxa688
+
+mmp2_brownstone_config :       unconfig
+	@$(MKCONFIG) $(@:_config=) arm 88SV581xV6 brownstone pxa pxa688
+
+mmp2_brownstone_emmc_config :       unconfig
+	@$(MKCONFIG) $(@:_config=) arm 88SV581xV6 brownstone pxa pxa688
 #========================================================================
 # i386
 #========================================================================
diff --git a/board/pxa/brownstone/Makefile b/board/pxa/brownstone/Makefile
new file mode 100644
index 0000000..41b4ad7
--- /dev/null
+++ b/board/pxa/brownstone/Makefile
@@ -0,0 +1,49 @@
+#
+# (C) Copyright 2008
+# Marvell Inc.
+# Lei Wen, <leiwen@marvell.com>
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	:= brownstone.o
+
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+ 
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/pxa/brownstone/brownstone.c b/board/pxa/brownstone/brownstone.c
new file mode 100644
index 0000000..fc96f62
--- /dev/null
+++ b/board/pxa/brownstone/brownstone.c
@@ -0,0 +1,418 @@
+/*
+ * (C) Copyright 2005
+ * Marvell Semiconductors Ltd. <www.marvell.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/arch/common.h>
+#include <asm/arch/mfp.h>
+#include <asm/arch/mfp-pxa688.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static mfp_cfg_t jasper_pin_config[] __initdata = {
+	/*TWSI1*/
+	TWSI1_SCL,
+	TWSI1_SDA,
+
+	/* UART3 */
+	GPIO51_UART3_RXD,
+	GPIO52_UART3_TXD,
+
+	/* SMC */
+	SM_nCS0_nCS0,
+	SM_ADV_SM_ADV,
+	SM_SCLK_SM_SCLK,
+	SM_SCLK_SM_SCLK,
+	SM_BE0_SM_BE0,
+	SM_BE1_SM_BE1,
+
+	/* DFI */
+	GPIO168_DFI_D0,	
+	GPIO167_DFI_D1,	
+	GPIO166_DFI_D2,	
+	GPIO165_DFI_D3,	
+	GPIO107_DFI_D4,	
+	GPIO106_DFI_D5,	
+	GPIO105_DFI_D6,	
+	GPIO104_DFI_D7,	
+	GPIO111_DFI_D8,	
+	GPIO164_DFI_D9,	
+	GPIO163_DFI_D10,
+	GPIO162_DFI_D11,
+	GPIO161_DFI_D12,
+	GPIO110_DFI_D13,
+	GPIO109_DFI_D14,
+	GPIO108_DFI_D15,
+	GPIO143_ND_nCS0,
+	GPIO144_ND_nCS1,	
+	GPIO147_ND_nWE,			
+	GPIO148_ND_nRE,					
+	GPIO150_ND_ALE,				
+	GPIO149_ND_CLE,			
+	GPIO112_ND_RDY0,	
+	GPIO160_ND_RDY1,
+	GPIO154_SMC_IRQ,			
+};
+
+static struct pxa3xx_mfp_addr_map pxa688_mfp_addr_map[] __initdata = {
+
+	MFP_ADDR_X(GPIO0, GPIO58, 0x54),
+	MFP_ADDR_X(GPIO59, GPIO73, 0x280),
+	MFP_ADDR_X(GPIO74, GPIO101, 0x170),
+	MFP_ADDR_X(GPIO115, GPIO122, 0x260),
+	MFP_ADDR_X(GPIO124, GPIO141, 0xc),
+	MFP_ADDR_X(GPIO143, GPIO151, 0x220),
+	MFP_ADDR_X(GPIO152, GPIO153, 0x248),
+	MFP_ADDR_X(GPIO154, GPIO155, 0x254),
+
+	MFP_ADDR(GPIO114, 0x164),
+	MFP_ADDR(GPIO123, 0x148),
+
+	MFP_ADDR(GPIO102, 0x0),
+	MFP_ADDR(GPIO103, 0x4),
+	MFP_ADDR(GPIO104, 0x142),
+	MFP_ADDR(GPIO168, 0x1e0),
+	MFP_ADDR(GPIO167, 0x1e4),
+	MFP_ADDR(GPIO166, 0x1e8),
+	MFP_ADDR(GPIO165, 0x1ec),
+	MFP_ADDR(GPIO107, 0x1f0),
+	MFP_ADDR(GPIO106, 0x1f4),
+	MFP_ADDR(GPIO105, 0x1f8),
+	MFP_ADDR(GPIO104, 0x1fc),
+	MFP_ADDR(GPIO111, 0x200),
+	MFP_ADDR(GPIO164, 0x204),
+	MFP_ADDR(GPIO163, 0x208),
+	MFP_ADDR(GPIO162, 0x20c),
+	MFP_ADDR(GPIO161, 0x210),
+	MFP_ADDR(GPIO110, 0x214),
+	MFP_ADDR(GPIO109, 0x218),
+	MFP_ADDR(GPIO108, 0x21c),
+	MFP_ADDR(GPIO110, 0x214),
+	MFP_ADDR(GPIO109, 0x218),
+	MFP_ADDR(GPIO112, 0x244),
+	MFP_ADDR(GPIO160, 0x250),
+	MFP_ADDR(GPIO113, 0x25c),
+
+	MFP_ADDR(TWSI1_SCL, 0x140),
+	MFP_ADDR(TWSI1_SDA, 0x144),
+	MFP_ADDR(CLK_REQ, 0x160),
+	
+	MFP_ADDR_END,
+};
+
+void
+dummy_delay(unsigned  int delay)
+{
+    volatile unsigned int i;
+    for(i = 0; i < delay; i++);
+}
+
+
+void twsi1_ldo11_enable()
+{
+	/*Set TWSI pins Alternate function*/
+	*(unsigned long *)0xD401E140=*(unsigned long *)0xD401E140 & 0xFFFFFFF8;
+	*(unsigned long *)0xD401E144=*(unsigned long *)0xD401E144 & 0xFFFFFFF8;
+
+	/*Setup TWSI unit clocks - reset the unit*/
+	*(unsigned long *)0xD4015004=0x4;
+	*(unsigned long *)0xD4015004=0x7;
+	*(unsigned long *)0xD4015004=0x3;
+	dummy_delay(10000);
+	
+	/*Initialize the TWSI interface - reset the controller*/
+	*(unsigned long *)0xD4011010=0x4060;
+	*(unsigned long *)0xD4011010=0x0060;
+	*(unsigned long *)0xD4011020=0x0000;
+	dummy_delay(10000);
+
+	//Send PMIC Slave Address with start bit. \n"
+	*(unsigned long *)0xD4011008=0x78;
+	*(unsigned long *)0xD4011010=0x69;
+	dummy_delay(10000);
+
+	//Send LDO11 Register Address. \n"
+	*(unsigned long *)0xD4011008=0x42;
+	*(unsigned long *)0xD4011010=0x68;
+	dummy_delay(10000);
+
+	//Send Value for 2.8V \n"
+	*(unsigned long *)0xD4011008=0x29;
+	*(unsigned long *)0xD4011010=0x68;
+	dummy_delay(10000);
+
+	//Send LDO11CTRL Register Address. \n"
+	*(unsigned long *)0xD4011008=0x40;
+	*(unsigned long *)0xD4011010=0x68;
+	dummy_delay(10000);
+
+	//Enable LDO11 and send stop bit \n"
+	*(unsigned long *)0xD4011008=0x1f;
+	*(unsigned long *)0xD4011010=0x6A;
+
+}
+
+#ifdef CONFIG_PXA9XX_SDH
+int board_mmc_init(bd_t *bd)
+{
+	return pxa9xx_mmc_init(bd);
+}
+#endif
+
+unsigned long initdram (int board_type)
+{
+    return (PHYS_SDRAM_SIZE_DEC*1024*1024);
+}
+
+int board_init (void)
+{
+    volatile unsigned int reg;
+
+    /* TODO: Should only enable the bits that make sense at this point */
+    /* Turn on clock gating (PMUM_CGR_SP) */
+    /**(volatile unsigned int *)0xd4050024 = 0x0818e33c;*/
+    /* Turn on clock gating (PMUM_CGR_PJ) */
+    *(volatile unsigned int *)0xd4051024 = 0xffffffff;
+	
+    *(volatile unsigned int *)0xD42828dc = 0x1FFFF;
+
+    /* AIB clock */
+    *(volatile unsigned int *)0xD4015064 = 0x7;
+    *(volatile unsigned int *)0xD4015064 = 0x3;
+
+    /* UART3 clk */
+    *(volatile unsigned int *)0xD4015034 = 0x3 | (1<<4); /*26MHz clock*/
+
+	reg = *(volatile unsigned int *)0xD401E160;
+	reg |= 1<<14; 
+	*(volatile unsigned int *)0xD401E160 = reg;
+
+	BU_REG_WRITE(0xd4015000, 0x83 );
+
+	//APB TIMER clock
+    *(volatile unsigned int *)0xd4015024 = 0x5;
+    *(volatile unsigned int *)0xd4015024 = 0x33;
+
+	reg = *(volatile unsigned int *)0xd4282c08;
+	reg |= (1<<6) | (1<<9) | (1<<14) | (1<<19) | (1<<13); 
+	reg &= ~(1<<23);
+	*(volatile unsigned int *)0xd4282c08 = reg;
+
+    if(cpu_is_pxa688_z0()){
+    	freq_init_sram(0xd1020000);
+    	freq_chg_seq(0xd1020000, 0xd1028000, 1);
+    }else{
+    	freq_init_sram(0xd1020000);
+    	freq_chg_seq(0xd1020000, 0xd1028000, 2);
+    }
+
+    *(volatile unsigned int *)0xd4282110 = 0x0;
+
+    *(volatile unsigned int *)0xd4283894 = 0x11000008;
+
+    *(volatile unsigned int *)0xd428290c = 0x600;
+    *(volatile unsigned int *)0xd428290c = 0x610;
+    *(volatile unsigned int *)0xd428290c = 0x710;
+    *(volatile unsigned int *)0xd428290c = 0x712;
+
+    *(volatile unsigned int *)0xd4050040 = 0xd0080040;
+    *(volatile unsigned int *)0xd4050044 = 0xd0040040;
+    *(volatile unsigned int *)0xd42a0c3c = 0x10800;
+    *(volatile unsigned int *)0xd42a0c34 = 0x211921;
+
+    *(volatile unsigned int *)0xd428285c = 0x8;
+    *(volatile unsigned int *)0xd428285c = 0x9;
+    *(volatile unsigned int *)0xd42828f8 = 0x18;
+    *(volatile unsigned int *)0xd42828f8 = 0x1b;
+    *(volatile unsigned int *)0xd42828fc = 0x18;
+    *(volatile unsigned int *)0xd42828fc = 0x1b;
+    *(volatile unsigned int *)0xd4282900 = 0x18;
+    *(volatile unsigned int *)0xd4282900 = 0x1b;
+
+
+    /* Below is for IRE */
+    *(volatile unsigned int *)0xd4282848 = 0x00000008;
+    *(volatile unsigned int *)0xd4282848 = 0x00000009;
+
+    /* TWSI1 clk*/
+    *(volatile unsigned int *)0xD4015004 = 0x3; 
+    dummy_delay(99999);
+
+    /* no clock gated*/
+    //*(volatile unsigned int *)0xd405000c=0x80E50FFF;
+
+    /* audio bus clock*/
+    //*(volatile unsigned int *)0xd42820c=0x1710;
+    //*(volatile unsigned int *)0xd42820c=0x1712;
+
+    /* SDHC clk*/
+    *(volatile unsigned int *)0xd4282854 = 0x1b; 
+    *(volatile unsigned int *)0xd42828e8 = 0x1b; 
+
+    *(volatile unsigned int *)0xd428284c=(1<<3);
+    *(volatile unsigned int *)0xd428284c=(1<<3) | 1;
+    *(volatile unsigned int *)0xd428284c=(1<<3) | 1 | (1<<4);
+    *(volatile unsigned int *)0xd428284c=(1<<3) | 1 | (1<<4) | (1<<1);
+
+    /* enable GPIO clock */
+    *(volatile unsigned int *)0xd4015038=0x03;
+
+	/* Allow access of performance counters(PMU) from user space*/
+	__asm__("mrc p15, 0, %0, c9, c14, 0" : "=r" (reg));
+	reg |= 0x1;
+	__asm__("mcr p15, 0, %0, c9, c14, 0" : : "r" (reg));
+
+	/* Ensure branch prediction is enabled - BPU (Default) */
+	__asm__("mrc p15, 0, %0, c1, c0, 0" : "=r" (reg));
+	reg |= (1<<11);
+	__asm__("mcr p15, 0, %0, c1, c0, 0" : : "r" (reg));
+
+    gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
+    gd->bd->bi_dram[0].size  = PHYS_SDRAM_1_SIZE;
+
+    /* arch number of FPGA Board */
+    gd->bd->bi_arch_number = 2957;  // MACH_TYPE_BROWNSTONE
+    
+    /* adress of boot parameters */
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+    gd->bd->bi_boot_params = 0x3C00;
+#else
+    gd->bd->bi_boot_params = 0x3C00;
+#endif
+    gd->baudrate = CONFIG_BAUDRATE;
+
+	BU_REG_WRITE( APBC_AIB_CLK_RST, APBC_AIB_CLK_RST_FNCLK  |
+		APBC_AIB_CLK_RST_APBCLK );
+
+    //BU_REG_WRITE( SMC_CSDFICFGX, 0x51890009 );              // SMC_CSDFICFG0
+    //BU_REG_WRITE( SMC_CSADRMAPX, 0x10000F00 );              // SMC_CSADRMAP0
+	//BU_REG_WRITE(0xd4283824, 0xC6CFF2C9 );
+	BU_REG_WRITE(0xd4283894, 0x11000008 );
+
+	BU_REG_WRITE(0xd4015000, 0x83 );
+	BU_REG_WRITE(0xd4015074, 0x3 );
+	BU_REG_WRITE(0xd4282864, 0x9 );
+	BU_REG_WRITE(0xd4282860, 0xb8);
+	BU_REG_WRITE(0xd4282860, 0xbf);
+
+	/*configure for MFP*/
+	pxa3xx_init_mfp();
+    pxa3xx_mfp_init_addr(pxa688_mfp_addr_map);
+
+    pxa3xx_mfp_config(ARRAY_AND_SIZE(jasper_pin_config));
+    //pxa3xx_mfp_set_pull(MFP_CFG_PIN(GPIO47_UART2_RXD), MFP_PULL_HIGH);
+    //pxa3xx_mfp_set_pull(MFP_CFG_PIN(GPIO48_UART2_TXD), MFP_PULL_HIGH);
+    //pxa3xx_mfp_set_pull(MFP_CFG_PIN(DF_RDY0_DF_RDY0), MFP_PULL_HIGH);
+
+    *(volatile unsigned int *)0xd4283024=0;
+
+	twsi1_ldo11_enable();
+
+    return 0;
+}
+
+int misc_init_r (void)
+{
+	char *env;
+	if (cpu_is_pxa688_z1()) {
+		/* set voltage to 1280mV by default */
+		set_volt(1280);
+		dummy_delay(99999);
+		set_volt(1280);
+	}
+	/* primary network interface */
+	env = getenv("ethprime");
+	if(!env)
+		setenv("ethprime","eth0");
+
+	/* default usb mode */
+	env = getenv("usbMode");
+	if(!env)
+		setenv("usbMode","host");
+
+	/* linux boot arguments */
+	env = getenv("default_load_addr");
+	if(!env)
+		setenv("default_load_addr",CONFIG_SYS_DEF_LOAD_ADDR);
+
+	env = getenv("image_name");
+	if(!env)
+		setenv("image_name",CONFIG_SYS_IMG_NAME);
+
+	env = getenv("bootfile");
+	if(!env)
+		setenv("bootfile",CONFIG_SYS_IMG_NAME);
+	        
+	env = getenv("initrd_name");
+	if(!env)
+	setenv("initrd_name",CONFIG_SYS_INITRD_NAME);
+
+	env = getenv("initrd_load_addr");
+	if(!env)
+		setenv("initrd_load_addr",CONFIG_SYS_INITRD_LOAD_ADDR);
+
+	env = getenv("initrd_size");
+	if(!env)
+		setenv("initrd_size",CONFIG_SYS_INITRD_SIZE);
+
+	env = getenv("standalone_mtd");
+	if(!env)
+		setenv("standalone_mtd","fsload $(default_load_addr) $(image_name);setenv bootargs $(bootargs) root=/dev/mtdblock0 rw rootfstype=jffs2 ip=$(ipaddr):$(serverip)$(bootargs_end);bootm $(default_load_addr);");
+
+	env = getenv("standalone_initrd");
+	if(!env)
+		setenv("standalone_initrd","fsload $(default_load_addr) $(image_name);fsload $(initrd_load_addr) $(initrd_name);setenv bootargs $(bootargs) root=/dev/ram0 rw initrd=0x$(initrd_load_addr),0x$(initrd_size) ip=$(ipaddr):$(serverip)$(bootargs_end); bootm $(default_load_addr);");
+
+	return 0;
+}
+
+
+int dram_init (void)
+{
+	return 0;
+}
+
+int checkboard (void)
+{
+	return display_marvell_banner();
+}
+
+int display_marvell_banner (void)
+{
+   printf("\n");
+   printf(" __  __                      _ _\n");
+   printf("|  \\/  | __ _ _ ____   _____| | |\n");
+   printf("| |\\/| |/ _` | '__\\ \\ / / _ \\ | |\n");
+   printf("| |  | | (_| | |   \\ V /  __/ | |\n");
+   printf("|_|  |_|\\__,_|_|    \\_/ \\___|_|_|\n");
+   printf(" _   _     ____              _\n");
+   printf("| | | |   | __ )  ___   ___ | |_ \n");
+   printf("| | | |___|  _ \\ / _ \\ / _ \\| __| \n");
+   printf("| |_| |___| |_) | (_) | (_) | |_ \n");
+   printf(" \\___/    |____/ \\___/ \\___/ \\__| ");
+   printf("\n\nMARVELL MMP2 AP.");
+   printf("\nBased on Feroceon Core with ARM1176 JZF CPU.\n\n"); 
+
+   return 0;
+}
+
+void lowlevel_init()
+{
+	return;
+}
diff --git a/board/pxa/brownstone/config.mk b/board/pxa/brownstone/config.mk
new file mode 100644
index 0000000..90b8531
--- /dev/null
+++ b/board/pxa/brownstone/config.mk
@@ -0,0 +1,14 @@
+#
+# image should be loaded at 0x00F00000
+#
+# UBOOT relocate at 0x1100000
+# and we could safely download to 0x1200000
+# For UBOOT less than 0x100000 = (512K)
+#
+
+ifeq ($(CONFIG_PJ4_NON_SECURE_MODE),y)
+TEXT_BASE = 0x1100000
+else
+TEXT_BASE = 0xF00000
+endif
+
diff --git a/board/pxa/brownstone/u-boot.lds b/board/pxa/brownstone/u-boot.lds
new file mode 100644
index 0000000..5f6067b
--- /dev/null
+++ b/board/pxa/brownstone/u-boot.lds
@@ -0,0 +1,50 @@
+/*
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <gj@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x00000000;
+	. = ALIGN(4);
+	.text	:
+	{
+	  cpu/88SV581xV6/start.o	(.text)	  
+	  *(.text)
+	}
+	.rodata : { *(.rodata) }
+	. = ALIGN(4);
+	.data : { *(.data) }
+	. = ALIGN(4);
+	.got : { *(.got) }
+	. = ALIGN(4);
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+	. = ALIGN(4);
+	__bss_start = .;
+	.bss : { *(.bss) }
+	_end = .;
+}
diff --git a/board/pxa/common/freq.c b/board/pxa/common/freq.c
index a3afdce..7bebcb6 100644
--- a/board/pxa/common/freq.c
+++ b/board/pxa/common/freq.c
@@ -13,7 +13,8 @@
 #include <common.h>
 #if (defined(CONFIG_TAVOREVB) || defined(CONFIG_TTC_DKB) || \
      defined(CONFIG_ASPENITE) || defined(CONFIG_ZYLONITE2) || \
-     defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT))
+     defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT)) || \
+     defined(CONFIG_MMP2_BROWNSTONE)
 #include <command.h>
 #include <asm/io.h>
 #include "pmua.h"
@@ -520,11 +521,11 @@ int do_op(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
 
 	return 0;
 }
-#elif (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT))
+#elif (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT) || defined(CONFIG_MMP2_BROWNSTONE))
 static void switch_op(int op)
 {
-	freq_init_sram(0xd1000000);
-	freq_chg_seq(0xd1000000, 0xd1008000, op);
+	freq_init_sram(0xd1020000);
+	freq_chg_seq(0xd1020000, 0xd1028000, op);
 }
 
 int do_op(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
@@ -1383,7 +1384,7 @@ U_BOOT_CMD(
 	#define VBUCK1_CNT(x)	((x < 0) ? -1 :			\
 				((x < 1825) ? ((x - 725) / 25)	\
 				: -1))
-#elif defined(CONFIG_MMP2_JASPER)
+#elif (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_BROWNSTONE))
 	#define VBUCK1_CNT(x)	((x < 0) ? -1 :			\
 				((x <= 1380) ? ((x - 750) / 10)	\
 				: -1))
@@ -1453,7 +1454,7 @@ int set_volt(u32 vol)
 #if (defined(CONFIG_TAVOREVB) || defined(CONFIG_TTC_DKB))
 	i2c_base = I2C_BASE;
 	cnt = VBUCK1_CNT(vol);
-#elif defined(CONFIG_MMP2_JASPER)
+#elif (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_BROWNSTONE))
 	i2c_base = I2C_BASE;
 	cnt = VBUCK1_CNT(vol);
 #elif (defined(CONFIG_ASPENITE) || defined(CONFIG_ZYLONITE2))
@@ -1488,7 +1489,7 @@ int set_volt(u32 vol)
 	res = i2c_writeb(0x34, 0x00, 0x0);	/* dummy write */
 	res = i2c_writeb(0x34, 0x23, cnt);	/* set V3 voltage in ADTV1 */
 	res = i2c_writeb(0x34, 0x20, 0x01);	/* select ADTV1 and let it go ramping */
-#elif CONFIG_MMP2_JASPER
+#elif (CONFIG_MMP2_JASPER || CONFIG_MMP2_BROWNSTONE)
 	res = i2c_readb(0x60, 0x02, &pval);
 	pval &= ~0x3f;
 	pval |= cnt;
@@ -1713,7 +1714,7 @@ U_BOOT_CMD(
 		"hibernate - put system into hibernate mode\n"
 	  );
 
-#if (!defined(CONFIG_MMP2_JASPER) && !defined(CONFIG_MMP2_FLINT))
+#if (!defined(CONFIG_MMP2_JASPER) && !defined(CONFIG_MMP2_FLINT) && !defined(CONFIG_MMP2_BROWNSTONE))
 void set_timer_match(ulong secs);
 
 int do_timeout(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
@@ -1902,7 +1903,7 @@ U_BOOT_CMD(
 		"initsleep - initialize for system sleep mode\n"
 	  );
 
-#if (!defined(CONFIG_MMP2_JASPER) && !defined(CONFIG_MMP2_FLINT))
+#if (!defined(CONFIG_MMP2_JASPER) && !defined(CONFIG_MMP2_FLINT) && !defined(CONFIG_MMP2_BROWNSTONE))
 void rtc_alarm_to_pmu(int alarm_secs);
 
 int do_setalarm(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
diff --git a/board/pxa/common/freq_ll.S b/board/pxa/common/freq_ll.S
index 029d62f..9da5a3d 100644
--- a/board/pxa/common/freq_ll.S
+++ b/board/pxa/common/freq_ll.S
@@ -67,7 +67,7 @@ freq_chg_seq:
 	mov	sp, r11			@ set up new stack address
 	stmfd	sp!, {lr}		@ store the return address
 
-#if (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT))
+#if (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT) || defined(CONFIG_MMP2_BROWNSTONE))
 	ldr	r4, =0xd0000000		@ DMEM base address
 #else
 	ldr	r4, =0xb0000000		@ DMEM base address
@@ -80,7 +80,7 @@ freq_sram_start:
 	b	1f
 	.align  5
 1:
-#if (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT))
+#if (defined(CONFIG_MMP2_JASPER) || defined(CONFIG_MMP2_FLINT) || defined(CONFIG_MMP2_BROWNSTONE))
 	@
 	@ frequency change
 	@
@@ -225,6 +225,8 @@ freq_sram_start:
 	ldr	r8, =mmp2_epd512_ddr
 #elif (defined(CONFIG_MMP2_FLINT))
 	ldr	r8, =mmp2_epd256_ddr
+#elif (defined(CONFIG_DDR3_EPD_1G))
+	ldr	r8, =mmp2_epd1024_ddr3
 #else
 	#error	"please define ddr table"
 #endif
@@ -526,6 +528,79 @@ mmp2_epd256_ddr:
 	.long	0x410, 	0x03020002
 	.long	0x410, 	0x03020003
 	.long	0x80000000, 0x0
+#elif (defined(CONFIG_DDR3_EPD_1G))
+mmp2_epd1024_ddr3:
+	.long	0x010, 	0xD0004D56	@ CONFIG_DECODE_ADDR
+	.long	0x100, 	0x000D0001	@ MMAP
+	.long	0x110, 	0x200D0001
+
+	.long	0x020, 	0x00222430	@ CONFIG_TYPE
+	.long	0x030, 	0x00222430
+	.long	0xB40, 	0x00000000
+	.long	0xB50, 	0x00000000
+
+	.long	0x050, 	0x911400C8	@ TIMING
+	.long	0x060, 	0x646602C4
+	.long	0x190, 	0xC2003053
+	.long	0x1C0, 	0x44F2A186
+	.long	0x650, 	0x000F00C1
+	.long	0x660, 	0x04040200
+
+	.long	0x080, 	0x00005000	@ CTRL
+	.long	0x090, 	0x00100010
+	.long	0x0F0, 	0xC0000000
+	.long	0x1A0, 	0x20C0C409
+	.long	0x280, 	0x01010101
+	.long	0x760, 	0x00000201
+	.long	0x770, 	0x0100000A
+	.long	0x780, 	0x00000133
+	.long	0x7B0, 	0x01010101
+	.long	0x7D0, 	0x0000000F
+	.long	0x7E0, 	0x00000000
+
+	.long	0x540, 	0x00000000	@ MCB
+	.long	0x570, 	0x00000001
+	.long	0x580, 	0x00000000
+	.long	0x590, 	0x00000000
+	.long	0x5A0, 	0x00000000
+	.long	0x5B0, 	0x00000000
+
+	.long	0x180, 	0x00000000	@ WRITE_PROTECTION
+
+	.long	0x210, 	0x00000000	@ __PHY Deskew PLL config and PHY initialization
+	.long	0x240, 	0x80000000
+
+	.long	0x10000000, 0x0		@ DLL reset, Need this after any DCLK freq change
+	.long	0x240,	0x20000000
+	.long	0x20000000, 0x0
+	.long	0x240,	0xdfffffff
+
+	.long	0x10000000, 0x0		@ Pad drive strength auto calibration
+	.long	0x200,	0x00110000
+	.long	0x40000000, 0x0
+	.long	0x240,	0x0
+	.long	0x20000000, 0x0
+	.long	0x200,	0xfffeffff
+
+	.long	0x140, 	0x20004055
+	.long	0x1D0, 	0x1FF84849
+	.long	0x1E0, 	0x0FF00840
+	.long	0x1F0, 	0x00000084
+
+	.long	0x230, 	0x20100088
+	.long	0xE10, 	0x00100080
+	.long	0xE20, 	0x00100080
+	.long	0xE30, 	0x00100080
+
+	.long	0xE40, 	0x00000000
+	.long	0xE50, 	0x00000000
+
+	.long	0x120, 	0x03000001	@ initialize LPDDR2
+	.long	0x40000000, 0x0
+	.long	0x1b0,	0x0
+	.long	0x120, 	0x01001000
+	.long	0x120, 	0x02001000
+	.long	0x80000000, 0x0
 #else
 	#error	"please define ddr table"
 #endif
diff --git a/drivers/mmc/pxa9xx_sdh.c b/drivers/mmc/pxa9xx_sdh.c
index 051ad96..1ae6165 100644
--- a/drivers/mmc/pxa9xx_sdh.c
+++ b/drivers/mmc/pxa9xx_sdh.c
@@ -444,7 +444,7 @@ int pxa9xx_mmc_init(bd_t *bis)
 
 		ret = sdh_add_mmc(4);
 		return ret;
-	} else if (bis->bi_arch_number == 2382){ //MMP2
+	} else if ((bis->bi_arch_number == 2382)||(bis->bi_arch_number == 2957)){ //MMP2
 		int ret = 0;
 
 		/* MMC3 */
diff --git a/include/configs/mmp2_brownstone.h b/include/configs/mmp2_brownstone.h
new file mode 100644
index 0000000..fa7140b
--- /dev/null
+++ b/include/configs/mmp2_brownstone.h
@@ -0,0 +1,253 @@
+/*
+ * (C) Copyright 2008
+ * Marvell Semiconductors Ltd. Shanghai, China.
+ *
+ * Configuration for Tavor EVB board.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/************/
+/* VERSIONS */
+/************/
+#define CONFIG_IDENT_STRING   		"\nMarvell version: 1.1.1.1 MMP2"
+
+/* version number passing when loading Kernel */
+#define VER_NUM 			0x01010101	/* 1.1.1.18 */
+/*
+ * High Level Configuration Options
+ * (easy to change)
+ */
+#define CONFIG_CPU_PXA910		1 /* This is an pxa910 core*/
+#define CONFIG_CPU_PXA688		1 /* This is an pxa410 core*/
+#define CONFIG_PXAXXX      		1 /*  pxa family */
+#define CONFIG_MMP2_BROWNSTONE	    		1
+#define CONFIG_FFUART
+
+/* DDR Type and Size on Brownstone Platform*/
+#undef CONFIG_DDR_MICRON_256M
+#undef CONFIG_DDR_EPD_512M
+#define CONFIG_DDR3_EPD_1G
+
+#define CONFIG_SYS_BOARD_NAME		"ARM1176JZF based"
+#define CONFIG_SYS_VENDOR_NAME     	"MARVELL"
+
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+#define CONFIG_SYS_UBOOT_BASE		0x1100000	
+#define CONFIG_SYS_MEMTEST_START      	0x00300000
+#define CONFIG_SYS_MEMTEST_END        	0x01100000
+#else
+#define CONFIG_SYS_UBOOT_BASE		0xf00000	
+#define CONFIG_SYS_MEMTEST_START      	0x00100000
+#define CONFIG_SYS_MEMTEST_END        	0x00f00000
+#endif
+
+#define CONFIG_SYS_HZ   		(6500000)      /* KV - Timer 0 is clocked at 3.25 MHz */
+#define CONFIG_SYS_TIMERBASE 		0xD4014000 
+#define CONFIG_SYS_CPUSPEED		0x161		/* set core clock to 400/200/100 MHz */
+#define CONFIG_DISPLAY_BOARDINFO
+
+#define CONFIG_MARVELL_TAG		1
+#define CONFIG_CMDLINE_TAG         	1   /* enable passing of ATAGs  */
+#define CONFIG_SETUP_MEMORY_TAGS   	1
+#define CONFIG_MISC_INIT_R         	1   /* call misc_init_r during start up */
+
+/*
+ * Size of malloc() pool
+ */
+#define CONFIG_SYS_MALLOC_LEN      	(CONFIG_SYS_ENV_SIZE + 512*1024)
+#define CONFIG_SYS_GBL_DATA_SIZE   	128   /* size in bytes reserved for initial data */
+
+/*
+ *  Configuration
+ */
+#define CONFIG_AUTO_COMPLETE
+#define CONFIG_CONS_INDEX     		1
+#undef  CONFIG_SERIAL_SOFTWARE_FIFO
+#define CONFIG_SYS_NS16550
+#define CONFIG_SYS_NS16550_SERIAL
+#define CONFIG_SYS_NS16550_REG_SIZE   	-4
+#define CONFIG_SYS_NS16550_CLK        	26000000
+#define CONFIG_BAUDRATE        		38400
+#define CONFIG_SYS_BAUDRATE_TABLE     	{ 9600, 19200, 38400, 57600, 115200 }
+#define CONFIG_SYS_NS16550_COM1       	0xD4018000 /* configure for PXA910*/
+
+#define CONFIG_SHOW_BOOT_PROGRESS
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_NET
+#define CONFIG_NET_MULTI
+#define CONFIG_LOOP_WRITE_MTD
+#define MV_ETH_DEVS 			1
+
+#define CONFIG_IPADDR      		192.168.1.101
+
+#define CONFIG_SERVERIP    		192.168.1.100
+
+#define CONFIG_ETHADDR			"00:00:5A:9F:6D:82"
+
+/* enable passing of ATAGs  */
+#define CONFIG_CMDLINE_TAG       	1
+#define CONFIG_SETUP_MEMORY_TAGS 	1
+#define CONFIG_SYS_TCLK         	0 /* not in use */
+#define CONFIG_SYS_BUS_CLK         	0 /* not in use */
+#define CONFIG_ENV_SIZE		 	0x4000
+#define CONFIG_ENV_OFFSET        	0x40000
+
+/***************************************/
+/* LINUX BOOT and other ENV PARAMETERS */
+/***************************************/
+#define CONFIG_SYS_BOOTARGS_END     	":::MMP2:eth0:none"
+#define CONFIG_SYS_BOOTARGS_ROOT    	"root=/dev/nfs rw init=/linuxrc"
+#define CONFIG_ZERO_BOOTDELAY_CHECK
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+#define CONFIG_SYS_LOAD_ADDR        	0x01100000   /* default load address   */
+#define CONFIG_SYS_DEF_LOAD_ADDR    	"0x01100000"
+#else
+#define CONFIG_SYS_LOAD_ADDR        	0x01100000   /* default load address   */
+#define CONFIG_SYS_DEF_LOAD_ADDR    	"0x01100000"
+#endif
+#define CONFIG_SYS_IMG_NAME		"zImage"
+#define CONFIG_SYS_INITRD_NAME      	"ramdisk.image.gz"
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+#define CONFIG_SYS_INITRD_LOAD_ADDR 	"1500000"
+#else
+#define CONFIG_SYS_INITRD_LOAD_ADDR 	"1500000"
+#endif
+#define CONFIG_SYS_INITRD_SIZE      	"400000"
+#undef  CONFIG_BOOTARGS
+
+#define CONFIG_BOOTDELAY        	3
+
+#if (CONFIG_BOOTDELAY >= 0)
+
+/* boot arguments" */
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+#define CONFIG_ONENANDBOOT	     	"onenand read 0x1100000 0x980000 0x300000"
+#define CONFIG_NANDBOOT 	     	"nand read 0x1100000 0x980000 0x300000"
+#define CONFIG_BOOTCOMMAND      	"setenv autoboot boot; bootz 0x1100000; setenv autoboot none"
+#else
+#define CONFIG_ONENANDBOOT	     	"onenand read 0x1100000 0x980000 0x300000"
+#define CONFIG_NANDBOOT 	     	"nand read 0x1100000 0x980000 0x300000"
+#define CONFIG_BOOTCOMMAND      	"setenv autoboot boot; bootz 0x1100000; setenv autoboot none"
+#endif
+#define CONFIG_ROOTPATH   		/tftpboot/rootfs_arm
+
+#endif /* #if (CONFIG_BOOTDELAY >= 0) */
+
+#define CONFIG_SYS_BARGSIZE   		CONFIG_SYS_CBSIZE   /* Boot Argument Buffer Size   */
+
+/*
+ * For booting Linux, the board info and command line data
+ * have to be in the first 8 MB of memory, since this is
+ * the maximum mapped by the Linux kernel during initialization.
+ */
+#define CONFIG_SYS_BOOTMAPSZ      	(8<<20)   /* Initial Memory map for Linux */
+
+/*
+ * Miscellaneous configurable options
+ */
+#define CONFIG_SYS_LONGHELP        	/* undef to save memory     */
+#define CONFIG_SYS_PROMPT         	"MMP2>> "   /* Monitor Command Prompt   */
+#define CONFIG_SYS_PROMPT_HUSH_PS2     	"> "
+/* Console I/O Buffer Size  */
+#define CONFIG_SYS_CBSIZE         	512
+/* Print Buffer Size */
+#define CONFIG_SYS_PBSIZE         	(CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16)
+/* max number of command args   */
+#define CONFIG_SYS_MAXARGS        	16
+/* Boot Argument Buffer Size    */
+#define CONFIG_SYS_BARGSIZE       	CONFIG_SYS_CBSIZE
+#undef  CONFIG_SYS_CLKS_IN_HZ         	/* everything, incl board info, in Hz */
+#define CONFIG_ENV_OVERWRITE    	/* allow to change env parameters */
+#undef  CONFIG_INIT_CRITICAL
+#define CONFIG_CMDLINE_EDITING
+#define CONFIG_COMMAND_HISTORY
+#define CONFIG_COMMAND_EDIT
+#define CONFIG_SYS_64BIT_VSPRINTF
+
+
+/*-----------------------------------------------------------------------
+ * Stack sizes
+ *
+ * The stack sizes are set up in start.S using the settings below
+ */
+#define CONFIG_STACKSIZE       		(128*1024)   /* regular stack */
+#ifdef  CONFIG_USE_IRQ
+#define CONFIG_STACKSIZE_IRQ   		(4*1024)   /* IRQ stack */
+#define CONFIG_STACKSIZE_FIQ   		(4*1024)   /* FIQ stack */
+#endif
+
+/*-----------------------------------------------------------------------
+ * Physical Memory Map
+ */
+#define CONFIG_NR_DRAM_BANKS    	1   /* we have 1 bank of DRAM */
+#ifdef CONFIG_PJ4_NON_SECURE_MODE
+#define PHYS_SDRAM_1            	0x00200000   /* SDRAM Bank #1 */
+#define PHYS_SDRAM_1_SIZE       	0x3fe00000   /* 1022 MB */
+#define PHYS_SDRAM_SIZE_DEC     	1022
+#else
+#define PHYS_SDRAM_1            	0x00000000   /* SDRAM Bank #1 */
+#define PHYS_SDRAM_1_SIZE       	0x40000000   /* 1024 MB */
+#define PHYS_SDRAM_SIZE_DEC     	1024
+#endif
+#define CONFIG_SYS_ENV_SIZE            	0x10000   /* Total Size of Environment Sector */
+#define	CONFIG_ENV_IS_NOWHERE		1
+#define CONFIG_SYS_NO_FLASH		1
+#define CONFIG_BBM			1
+
+/*-----------------------------------------------------------------------
+ * NAND and DFC configuration
+ */
+#define CONFIG_NAND_PXA3XX
+#define CONFIG_CMD_NAND 		1
+#define CONFIG_SYS_MAX_NAND_DEVICE	1         /* Max number of NAND devices */
+#define CONFIG_SYS_NAND_BASE		0xD4283000
+
+/*-----------------------------------------------------------------------
+ * ONENAND configuration
+ */
+#define CONFIG_CMD_ONENAND 		1
+#define CONFIG_SYS_ONENAND_BASE 	0x80000000  /* configure for PXA910*/
+
+/*-----------------------------------------------------------------------
+ * FREQUENCE configuration
+ */
+#define CONFIG_CMD_FREQUENCE		1
+
+#undef TURN_ON_ETHERNET
+#define TURN_ON_ETHERNET
+#ifdef TURN_ON_ETHERNET
+#define CONFIG_USB_ETH			1
+#define CONFIG_U2O_REG_BASE		0xd4208000
+#define CONFIG_U2O_PHY_BASE		0xd4207000
+#define CONFIG_DRIVER_SMC91111 		1
+#define CONFIG_SMC91111_BASE   		0x90000300 /* PXA910*/
+#define CONFIG_SMC_USE_16_BIT
+#undef CONFIG_SMC_USE_IOFUNCS          /* just for use with the kernel */
+#endif
+#define CONFIG_NET_RETRY_COUNT 		10000
+
+/*-----------------------------------------------------------------------
+ * cache set/way configuration
+ */
+#undef CONFIG_FLUSH_ALL_REPLACEMENT
+
+#endif
+/* __CONFIG_H */
diff --git a/include/configs/mmp2_brownstone_emmc.h b/include/configs/mmp2_brownstone_emmc.h
new file mode 100644
index 0000000..8e38712
--- /dev/null
+++ b/include/configs/mmp2_brownstone_emmc.h
@@ -0,0 +1,43 @@
+/*
+ * (C) Copyright 2008
+ * Marvell Semiconductors Ltd. Shanghai, China.
+ *
+ * Configuration for Tavor EVB board.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_MMP2_JASPER_EMMC_H
+#define __CONFIG_MMP2_JASPER_EMMC_H
+
+#include <configs/mmp2_brownstone.h>
+
+/* MMC configuration */
+#define CONFIG_CMD_MMC
+#define CONFIG_MMC
+#define CONFIG_GENERIC_MMC
+#define CONFIG_PXA9XX_SDH
+#define CONFIG_DOS_PARTITION
+#define CONFIG_CMD_FAT
+#define CONFIG_CMD_EXT2
+
+#define BOOT_FROM_EMMC
+#define CONFIG_MMCBOOT			"mmc read 0x4c00 0x2000 0x1100000"
+#define CONFIG_MBR_SECTOR		0x4800
+
+#define CONFIG_PXA688_EMMC_WORKAROUND
+#endif
+/* __CONFIG_MMP2_JASPER_EMMC_H */
-- 
1.6.0.4

