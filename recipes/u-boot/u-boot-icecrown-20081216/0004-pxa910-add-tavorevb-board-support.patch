From 4acccc4fe3d2ea62ba67e8abdc53976dece0b65f Mon Sep 17 00:00:00 2001
From: Wen Lei <leiwen@marvell.com>
Date: Fri, 27 Feb 2009 10:21:06 +0800
Subject: [PATCH] pxa910: add tavorevb board support

---
 Makefile                             |    7 +
 board/pxa/common/Makefile            |   54 ++++++
 board/pxa/common/boot.c              |   13 ++
 board/pxa/tavorEVB/Makefile          |   49 +++++
 board/pxa/tavorEVB/config.mk         |    7 +
 board/pxa/tavorEVB/tavorevb_pxa168.c |  348 ++++++++++++++++++++++++++++++++++
 board/pxa/tavorEVB/u-boot.lds        |   50 +++++
 include/configs/tavorevb.h           |  196 +++++++++++++++++++
 8 files changed, 724 insertions(+), 0 deletions(-)
 create mode 100644 board/pxa/common/Makefile
 create mode 100644 board/pxa/common/boot.c
 create mode 100644 board/pxa/tavorEVB/Makefile
 create mode 100644 board/pxa/tavorEVB/config.mk
 create mode 100644 board/pxa/tavorEVB/tavorevb_pxa168.c
 create mode 100644 board/pxa/tavorEVB/u-boot.lds
 create mode 100644 include/configs/tavorevb.h

diff --git a/Makefile b/Makefile
index 4df4812..28eda01 100644
--- a/Makefile
+++ b/Makefile
@@ -2555,6 +2555,13 @@ shannon_config	:	unconfig
 	@$(MKCONFIG) $(@:_config=) arm sa1100 shannon
 
 #########################################################################
+## 88SV331xV5 Systems
+#########################################################################
+
+tavorevb_config :       unconfig
+	@$(MKCONFIG) $(@:_config=) arm 88SV331xV5 tavorEVB  pxa pxa168
+
+#########################################################################
 ## ARM92xT Systems
 #########################################################################
 
diff --git a/board/pxa/common/Makefile b/board/pxa/common/Makefile
new file mode 100644
index 0000000..9d61672
--- /dev/null
+++ b/board/pxa/common/Makefile
@@ -0,0 +1,54 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+ifneq ($(OBJTREE),$(SRCTREE))
+$(shell mkdir -p $(obj)board/$(VENDOR)/common)
+endif
+
+LIB	= $(obj)lib$(VENDOR).a
+
+COBJS-y				+= boot.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS-y:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS-y))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/pxa/common/boot.c b/board/pxa/common/boot.c
new file mode 100644
index 0000000..cef655a
--- /dev/null
+++ b/board/pxa/common/boot.c
@@ -0,0 +1,13 @@
+/*
+ * Boot support
+ */
+#include <common.h>
+#include <watchdog.h>
+#include <command.h>
+#include <image.h>
+#include <malloc.h>
+#include <environment.h>
+#include <linux/ctype.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+ulong load_addr = CONFIG_SYS_LOAD_ADDR;	/* Default Load Address */
diff --git a/board/pxa/tavorEVB/Makefile b/board/pxa/tavorEVB/Makefile
new file mode 100644
index 0000000..e6232e6
--- /dev/null
+++ b/board/pxa/tavorEVB/Makefile
@@ -0,0 +1,49 @@
+#
+# (C) Copyright 2008
+# Marvell Inc.
+# Lei Wen, <leiwen@marvell.com>
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	:= tavorevb_pxa168.o
+
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+ 
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/pxa/tavorEVB/config.mk b/board/pxa/tavorEVB/config.mk
new file mode 100644
index 0000000..2517242
--- /dev/null
+++ b/board/pxa/tavorEVB/config.mk
@@ -0,0 +1,7 @@
+#
+# UBOOT relocate at 0x00F00000
+# and we could safely download to 0x1000000
+# For UBOOT less than 0x100000 = (512K)
+#
+
+TEXT_BASE = 0x0F00000
diff --git a/board/pxa/tavorEVB/tavorevb_pxa168.c b/board/pxa/tavorEVB/tavorevb_pxa168.c
new file mode 100644
index 0000000..de2d270
--- /dev/null
+++ b/board/pxa/tavorEVB/tavorevb_pxa168.c
@@ -0,0 +1,348 @@
+/*
+ * (C) Copyright 2005
+ * Marvell Semiconductors Ltd. <www.marvell.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/arch/common.h>
+#include <asm/arch/mfp.h>
+#include <asm/arch/mfp-pxa168.h>
+
+static mfp_cfg_t pxa910_tavorevb_mfp_cfg[] __initdata = {
+	/* UART2 */
+	GPIO47_UART2_RXD,
+	GPIO48_UART2_TXD,
+
+	/* SMC */
+	SM_nCS0_nCS0,
+	SM_ADV_SM_ADV,
+	SM_SCLK_SM_SCLK,
+	SM_SCLK_SM_SCLK,
+	SM_BE0_SM_BE0,
+	SM_BE1_SM_BE1,
+
+	/* DFI */
+	PXA910_DF_IO0_ND_IO0,
+	PXA910_DF_IO1_ND_IO1,
+	PXA910_DF_IO2_ND_IO2,
+	PXA910_DF_IO3_ND_IO3,
+	PXA910_DF_IO4_ND_IO4,
+	PXA910_DF_IO5_ND_IO5,
+	PXA910_DF_IO6_ND_IO6,
+	PXA910_DF_IO7_ND_IO7,
+	PXA910_DF_IO8_ND_IO8,
+	PXA910_DF_IO9_ND_IO9,
+	PXA910_DF_IO10_ND_IO10,
+	PXA910_DF_IO11_ND_IO11,
+	PXA910_DF_IO12_ND_IO12,
+	PXA910_DF_IO13_ND_IO13,
+	PXA910_DF_IO14_ND_IO14,
+	PXA910_DF_IO15_ND_IO15,
+	DF_nCS0_SM_nCS2_nCS0,
+	DF_ALE_SM_WEn_ND_ALE,
+	DF_CLE_SM_OEn_ND_CLE,
+	DF_WEn_DF_WEn,
+	DF_REn_DF_REn,
+	DF_RDY0_DF_RDY0,
+};
+
+static struct pxa3xx_mfp_addr_map pxa910_910_mfp_addr_map[] __initdata = {
+
+	MFP_ADDR_X(GPIO0, GPIO54, 0xdc),
+	MFP_ADDR_X(GPIO67, GPIO98, 0x1b8),
+	MFP_ADDR_X(GPIO100, GPIO109, 0x238),
+
+	MFP_ADDR(GPIO123, 0xcc),
+	MFP_ADDR(GPIO124, 0xd0),
+
+	MFP_ADDR(DF_IO0, 0x40),
+	MFP_ADDR(DF_IO1, 0x3c),
+	MFP_ADDR(DF_IO2, 0x38),
+	MFP_ADDR(DF_IO3, 0x34),
+	MFP_ADDR(DF_IO4, 0x30),
+	MFP_ADDR(DF_IO5, 0x2c),
+	MFP_ADDR(DF_IO6, 0x28),
+	MFP_ADDR(DF_IO7, 0x24),
+	MFP_ADDR(DF_IO8, 0x20),
+	MFP_ADDR(DF_IO9, 0x1c),
+	MFP_ADDR(DF_IO10, 0x18),
+	MFP_ADDR(DF_IO11, 0x14),
+	MFP_ADDR(DF_IO12, 0x10),
+	MFP_ADDR(DF_IO13, 0xc),
+	MFP_ADDR(DF_IO14, 0x8),
+	MFP_ADDR(DF_IO15, 0x4),
+
+	MFP_ADDR(DF_nCS0_SM_nCS2, 0x44),
+	MFP_ADDR(DF_nCS1_SM_nCS3, 0x48),
+	MFP_ADDR(SM_nCS0, 0x4c),
+	MFP_ADDR(SM_nCS1, 0x50),
+	MFP_ADDR(DF_WEn, 0x54),
+	MFP_ADDR(DF_REn, 0x58),
+	MFP_ADDR(DF_CLE_SM_OEn, 0x5c),
+	MFP_ADDR(DF_ALE_SM_WEn, 0x60),
+	MFP_ADDR(SM_SCLK, 0x64),
+	MFP_ADDR(DF_RDY0, 0x68),
+	MFP_ADDR(SM_BE0, 0x6c),
+	MFP_ADDR(SM_BE1, 0x70),
+	MFP_ADDR(SM_ADV, 0x74),
+	MFP_ADDR(DF_RDY1, 0x78),
+	MFP_ADDR(SM_ADVMUX, 0x7c),
+	MFP_ADDR(SM_RDY, 0x80),
+
+
+	MFP_ADDR_END,
+};
+
+void
+dummy_delay(unsigned  int delay)
+{
+    volatile unsigned int i;
+    for(i = 0; i < delay; i++);
+}
+
+unsigned long initdram (int board_type)
+{
+    return (PHYS_SDRAM_SIZE_DEC*1024*1024);
+}
+
+int board_init (void)
+{
+    DECLARE_GLOBAL_DATA_PTR;
+    volatile unsigned int reg;
+
+    /* set SEL_MRVL_ID bit in MOHAWK_CPU_CONF register - Ning */
+    *(volatile unsigned int *)0xD4282c08 = *(volatile unsigned int *)0xD4282c08 | 0x100;
+
+    /* TODO: Should only enable the bits that make sense at this point */
+    /* Turn on clock gating (PMUM_CCGR) */
+    *(volatile unsigned int *)0xd4050024 = 0xffffffff;
+    /* Turn on clock gating (PMUM_ACGR) */
+    *(volatile unsigned int *)0xD4051024 = 0xffffffff; 
+
+
+    /* Use PLL1 */
+    *(volatile unsigned int *)0xd4050008 = 0x20800000;
+    /* If seagull is in reset, then write to this register so the Mohawk 
+     * can do freq change */
+    *(volatile unsigned int *)0xd4282888 = 0x00060009;
+    /* Set the divider to get CPU p clock 312MHz  and ddr at 104MHz */
+    *(volatile unsigned int *)0xd4282804 = 0x003da6d9;
+    /* Set the allow bits from seagull side */
+    *(volatile unsigned int *)0xd4282800 = 0x08fd96d9;
+    /* Give the freq change command */
+    *(volatile unsigned int *)0xd4282804 = 0x0f3da6d9;
+
+    /* Allow the freq chng ddr 104 CPU 624Mhz while cp in reset */
+    /* TODO: Verify if the above comment makes sense */
+    *(volatile unsigned int *)0xb0000230 = 0xf0007D04;
+    *(volatile unsigned int *)0xb0000240 = 0x20000000;
+
+    /* temporary work-around to fix DDR 156 issue -- Ning */
+    *(volatile unsigned int *)0xb0000230 = 0x20007c04;
+    *(volatile unsigned int *)0xb0000e10 = 0x20007c04;
+    *(volatile unsigned int *)0xb0000e20 = 0x20007c04;
+    *(volatile unsigned int *)0xb0000e30 = 0x20007c04;
+
+    *(volatile unsigned int *)0xD4050024 = 0xfffffffb;
+    *(volatile unsigned int *)0xd4015000 = 0x00000013;
+    *(volatile unsigned int *)0xd428284c = 0x00000008;
+    *(volatile unsigned int *)0xd428284c = 0x00000009;
+    *(volatile unsigned int *)0xd428284c = 0x00000019;
+    *(volatile unsigned int *)0xd428284c = 0x0000001b;
+
+    /* Below is for IRE */
+    *(volatile unsigned int *)0xd4282848 = 0x00000008;
+    *(volatile unsigned int *)0xd4282848 = 0x00000009;
+    /* UART2 clk */
+    *(volatile unsigned int *) 0xD4015000 = 0x13; 
+
+    /* TWSI clk*/
+    *(volatile unsigned int *) 0xD401502c = 0x3; 
+    dummy_delay(99999);
+	
+    /*ssp1 reset and clock*/
+    *(volatile unsigned int *)0xd405000c=0x80E50FFF;
+    *(volatile unsigned int *)0xd4050040=0xf81902b3;
+    *(volatile unsigned int *)0xd4050044=0xf81902b3;   
+    *(volatile unsigned int *)0xd4015020=0x00000006;
+    dummy_delay(99999);
+    *(volatile unsigned int *)0xd4015020=0x00000002;
+
+    /* enable GPIO clock */
+    *(volatile unsigned int *)0xd4015008=0x03;
+
+    /* configure GPIO80 as input (ether_irq) */
+    *(volatile unsigned int *)(0xd4019008 + 0x60)=0x10000;
+    /* enable GPIO80 rising edge interrupt */
+    *(volatile unsigned int *)(0xd4019008 + 0x6c)=0x10000;
+    /* unmask GPIO80 interrupt */
+    *(volatile unsigned int *)(0xd4019008 + 0x9c)=0x10000;
+
+    /* Core CPU settings */
+    __asm__ __volatile__ ("                     \n\
+         @ Enable MMX                           \n\
+	 @mrc     p15, 0, r0, c15, c1, 0        \n\
+	 @orr     r0,  r0, #3	@ cp0, cp1      \n\
+	 @mcr     p15, 0, r0, c15, c1, 0        \n\
+                                                \n\
+	 @ Allow access of performance counters \n\
+         @ (PMU) from user space                \n\
+	 mov	r0, #0x1                        \n\
+	 mrc	p15, 0, r0, c15, c9, 0          \n\
+	 orr	r0, r0, #0x1                    \n\
+	 mcr	p15, 0, r0, c15, c9, 0          \n\
+                                                \n\
+	 @ Ensure branch prediction is          \n\
+         @ enabled - BPU (Default)              \n\
+	 mrc	p15, 0, r0, c1, c0, 0           \n\
+	 orr	r0, r0, #(1<<11)                \n\
+	 mcr	p15, 0, r0, c1, c0, 0           \n\
+         " : "=r" (reg));
+
+    gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
+    gd->bd->bi_dram[0].size  = PHYS_SDRAM_1_SIZE;
+
+    /* arch number of TavorEVB Board */
+    gd->bd->bi_arch_number = 1827;  // MACH_TYPE_TAVOREVB
+    
+    /* adress of boot parameters */
+    gd->bd->bi_boot_params = 0x00000100;
+    gd->baudrate = CONFIG_BAUDRATE;
+
+    BU_REG_WRITE( APBC_AIB_CLK_RST, APBC_AIB_CLK_RST_FNCLK  |
+		    APBC_AIB_CLK_RST_APBCLK );
+
+    BU_REG_WRITE( SMC_CSDFICFGX, 0x51890009 );              // SMC_CSDFICFG0
+    BU_REG_WRITE( SMC_CSADRMAPX, 0x10000F00 );              // SMC_CSADRMAP0
+    BU_REG_WRITE(0xd4283894, 0x1000008 ); // SMC_CSDFICFG1s, A/D mode
+
+    /*configure for MFP*/
+    pxa3xx_init_mfp();
+    pxa3xx_mfp_init_addr(pxa910_910_mfp_addr_map);
+
+    pxa3xx_mfp_config(ARRAY_AND_SIZE(pxa910_tavorevb_mfp_cfg));
+    pxa3xx_mfp_set_pull(MFP_CFG_PIN(GPIO47_UART2_RXD), MFP_PULL_HIGH);
+    pxa3xx_mfp_set_pull(MFP_CFG_PIN(GPIO48_UART2_TXD), MFP_PULL_HIGH);
+    pxa3xx_mfp_set_pull(MFP_CFG_PIN(DF_RDY0_DF_RDY0), MFP_PULL_HIGH);
+
+    return 0;
+}
+
+int misc_init_r (void)
+{
+        char *env;
+                                                                                                                                               
+        /* primary network interface */
+        env = getenv("ethprime");
+        if(!env)
+               setenv("ethprime","eth0");
+
+        /* default usb mode */
+	env = getenv("usbMode");
+        if(!env)
+               setenv("usbMode","host");
+
+        /* linux boot arguments */
+   	env = getenv("default_load_addr");
+   	if(!env)
+      		setenv("default_load_addr",CONFIG_SYS_DEF_LOAD_ADDR);
+
+        env = getenv("image_name");
+        if(!env)
+                setenv("image_name",CONFIG_SYS_IMG_NAME);
+
+        env = getenv("bootfile");
+        if(!env)
+                setenv("bootfile",CONFIG_SYS_IMG_NAME);
+                
+   	env = getenv("initrd_name");
+       	if(!env)
+                setenv("initrd_name",CONFIG_SYS_INITRD_NAME);
+ 
+   	env = getenv("initrd_load_addr");
+       	if(!env)
+               	setenv("initrd_load_addr",CONFIG_SYS_INITRD_LOAD_ADDR);
+
+   	env = getenv("initrd_size");
+        if(!env)
+                setenv("initrd_size",CONFIG_SYS_INITRD_SIZE);
+ 
+        env = getenv("standalone_mtd");
+        if(!env)
+                setenv("standalone_mtd","fsload $(default_load_addr) $(image_name);setenv bootargs $(bootargs) root=/dev/mtdblock0 rw rootfstype=jffs2 ip=$(ipaddr):$(serverip)$(bootargs_end);bootm $(default_load_addr);");
+
+        env = getenv("standalone_initrd");
+        if(!env)
+                setenv("standalone_initrd","fsload $(default_load_addr) $(image_name);fsload $(initrd_load_addr) $(initrd_name);setenv bootargs $(bootargs) root=/dev/ram0 rw initrd=0x$(initrd_load_addr),0x$(initrd_size) ip=$(ipaddr):$(serverip)$(bootargs_end); bootm $(default_load_addr);");
+        
+        /* MAC addresses */
+        env = getenv("ethaddr");
+        if(!env)
+                setenv("ethaddr",ETHADDR);
+
+	return 0;
+}
+
+
+int dram_init (void)
+{
+	return 0;
+}
+
+#define CPU_SYS_SOFT_RST_REG         0x90009034
+#define CPU_SYS_SOFT_RST_BIT         0x00010000 	/* bit 16 in little endian */
+void reset_cpu(ulong addr)
+{  
+   int i;
+
+   *(volatile unsigned int*)(CPU_SYS_SOFT_RST_REG) = CPU_SYS_SOFT_RST_BIT;
+   
+   for(i=0; i<0x10000; )
+     i++;
+
+   *(volatile unsigned int*)(CPU_SYS_SOFT_RST_REG) = 0x0;
+}
+
+int checkboard (void)
+{
+	return display_marvell_banner();
+}
+
+int display_marvell_banner (void)
+{
+   printf("\n");
+   printf(" __  __                      _ _\n");
+   printf("|  \\/  | __ _ _ ____   _____| | |\n");
+   printf("| |\\/| |/ _` | '__\\ \\ / / _ \\ | |\n");
+   printf("| |  | | (_| | |   \\ V /  __/ | |\n");
+   printf("|_|  |_|\\__,_|_|    \\_/ \\___|_|_|\n");
+   printf(" _   _     ____              _\n");
+   printf("| | | |   | __ )  ___   ___ | |_ \n");
+   printf("| | | |___|  _ \\ / _ \\ / _ \\| __| \n");
+   printf("| |_| |___| |_) | (_) | (_) | |_ \n");
+   printf(" \\___/    |____/ \\___/ \\___/ \\__| ");
+   printf("\n\nMARVELL Hermon2 AP.");
+   printf("\nBased on Feroceon Core with ARM926 LE CPU.\n\n"); 
+
+   return 0;
+}
+
+void lowlevel_init()
+{
+	return;
+}
diff --git a/board/pxa/tavorEVB/u-boot.lds b/board/pxa/tavorEVB/u-boot.lds
new file mode 100644
index 0000000..49681de
--- /dev/null
+++ b/board/pxa/tavorEVB/u-boot.lds
@@ -0,0 +1,50 @@
+/*
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <gj@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x00000000;
+	. = ALIGN(4);
+	.text	:
+	{
+	  cpu/88SV331xV5/start.o	(.text)	  
+	  *(.text)
+	}
+	.rodata : { *(.rodata) }
+	. = ALIGN(4);
+	.data : { *(.data) }
+	. = ALIGN(4);
+	.got : { *(.got) }
+	. = ALIGN(4);
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+	. = ALIGN(4);
+	__bss_start = .;
+	.bss : { *(.bss) }
+	_end = .;
+}
diff --git a/include/configs/tavorevb.h b/include/configs/tavorevb.h
new file mode 100644
index 0000000..794d805
--- /dev/null
+++ b/include/configs/tavorevb.h
@@ -0,0 +1,196 @@
+/*
+ * (C) Copyright 2008
+ * Marvell Semiconductors Ltd. Shanghai, China.
+ *
+ * Configuration for Tavor EVB board.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/************/
+/* VERSIONS */
+/************/
+#define CONFIG_IDENT_STRING   		"\nMarvell version: 1.1.1.1 PXAxxx"
+
+/* version number passing when loading Kernel */
+#define VER_NUM 			0x01010101	/* 1.1.1.18 */
+/*
+ * High Level Configuration Options
+ * (easy to change)
+ */
+#define CONFIG_CPU_PXA910		1 /* This is an pxa910 core*/
+#define CONFIG_PXAXXX      		1 /*  pxa family */
+#define CONFIG_TAVOREVB    		1
+#define CONFIG_FFUART
+
+#define CONFIG_SYS_BOARD_NAME		"88SV331xV5 based PXAxxx"
+#define CONFIG_SYS_VENDOR_NAME     	"MARVELL"
+
+#define CONFIG_SYS_MEMTEST_START      	0x00100000
+#define CONFIG_SYS_MEMTEST_END        	0x00F00000
+
+#define CONFIG_SYS_HZ   		(6240000)      /* KV - Timer 0 is clocked at 3.25 MHz */
+#define CONFIG_SYS_TIMERBASE 		0xD4014000 
+#define CONFIG_SYS_CPUSPEED		0x161		/* set core clock to 400/200/100 MHz */
+#define CONFIG_DISPLAY_BOARDINFO
+
+#define CONFIG_CMDLINE_TAG         	1   /* enable passing of ATAGs  */
+#define CONFIG_SETUP_MEMORY_TAGS   	1
+#define CONFIG_MISC_INIT_R         	1   /* call misc_init_r during start up */
+
+/*
+ * Size of malloc() pool
+ */
+#define CONFIG_SYS_MALLOC_LEN      	(CONFIG_SYS_ENV_SIZE + 512*1024)
+#define CONFIG_SYS_GBL_DATA_SIZE   	128   /* size in bytes reserved for initial data */
+
+/*
+ *  Configuration
+ */
+#define CONFIG_AUTO_COMPLETE
+#define CONFIG_CONS_INDEX     		1
+#undef  CONFIG_SERIAL_SOFTWARE_FIFO
+#define CONFIG_SYS_NS16550
+#define CONFIG_SYS_NS16550_SERIAL
+#define CONFIG_SYS_NS16550_REG_SIZE   	-4
+#define CONFIG_SYS_NS16550_CLK        	14745600
+#define CONFIG_BAUDRATE        		115200
+#define CONFIG_SYS_BAUDRATE_TABLE     	{ 9600, 19200, 38400, 57600, 115200 }
+#define CONFIG_SYS_NS16550_COM1       	0xD4017000
+
+#define CONFIG_SHOW_BOOT_PROGRESS
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_NET
+#define MV_ETH_DEVS 			1
+
+#define CONFIG_IPADDR      		192.168.1.101
+
+#define CONFIG_SERVERIP    		192.168.1.100
+
+#define ETHADDR            		"00:00:5A:9F:6D:82"
+
+/* enable passing of ATAGs  */
+#define CONFIG_CMDLINE_TAG       	1
+#define CONFIG_SETUP_MEMORY_TAGS 	1
+#define CONFIG_SYS_TCLK         	0 /* not in use */
+#define CONFIG_SYS_BUS_CLK         	0 /* not in use */
+#define CONFIG_ENV_SIZE		 	0x4000
+#define CONFIG_ENV_OFFSET        	0x40000
+
+/***************************************/
+/* LINUX BOOT and other ENV PARAMETERS */
+/***************************************/
+#define CONFIG_SYS_BOOTARGS_END     	":::TAVOREVB:eth0:none"
+#define CONFIG_SYS_BOOTARGS_ROOT    	"root=/dev/nfs rw init=/linuxrc"
+#define CONFIG_ZERO_BOOTDELAY_CHECK
+#define CONFIG_SYS_LOAD_ADDR        	0x00500000   /* default load address   */
+#define CONFIG_SYS_DEF_LOAD_ADDR    	"0x00500000"
+#define CONFIG_SYS_IMG_NAME		"zImage"
+#define CONFIG_SYS_INITRD_NAME      	"ramdisk.image.gz"
+#define CONFIG_SYS_INITRD_LOAD_ADDR 	"800000"
+#define CONFIG_SYS_INITRD_SIZE      	"400000"
+#undef  CONFIG_BOOTARGS
+
+#define CONFIG_BOOTDELAY        	3
+
+#if (CONFIG_BOOTDELAY >= 0)
+
+/* boot arguments" */
+#define CONFIG_BOOTCOMMAND      	"bootz 0x500000"
+#define CONFIG_ROOTPATH   		/tftpboot/rootfs_arm
+
+#endif /* #if (CONFIG_BOOTDELAY >= 0) */
+
+#define CONFIG_SYS_BARGSIZE   		CONFIG_SYS_CBSIZE   /* Boot Argument Buffer Size   */
+
+/*
+ * For booting Linux, the board info and command line data
+ * have to be in the first 8 MB of memory, since this is
+ * the maximum mapped by the Linux kernel during initialization.
+ */
+#define CONFIG_SYS_BOOTMAPSZ      	(8<<20)   /* Initial Memory map for Linux */
+
+/*
+ * Miscellaneous configurable options
+ */
+#define CONFIG_SYS_LONGHELP        	/* undef to save memory     */
+#define CONFIG_SYS_PROMPT         	"TavorEVB>> "   /* Monitor Command Prompt   */
+#define CONFIG_SYS_PROMPT_HUSH_PS2     	"> "
+/* Console I/O Buffer Size  */
+#define CONFIG_SYS_CBSIZE         	512
+/* Print Buffer Size */
+#define CONFIG_SYS_PBSIZE         	(CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16)
+/* max number of command args   */
+#define CONFIG_SYS_MAXARGS        	16
+/* Boot Argument Buffer Size    */
+#define CONFIG_SYS_BARGSIZE       	CONFIG_SYS_CBSIZE
+#undef  CONFIG_SYS_CLKS_IN_HZ         	/* everything, incl board info, in Hz */
+#define CONFIG_ENV_OVERWRITE    	/* allow to change env parameters */
+#undef  CONFIG_INIT_CRITICAL
+#define CONFIG_CMDLINE_EDITING
+
+
+/*-----------------------------------------------------------------------
+ * Stack sizes
+ *
+ * The stack sizes are set up in start.S using the settings below
+ */
+#define CONFIG_STACKSIZE       		(128*1024)   /* regular stack */
+#ifdef  CONFIG_USE_IRQ
+#define CONFIG_STACKSIZE_IRQ   		(4*1024)   /* IRQ stack */
+#define CONFIG_STACKSIZE_FIQ   		(4*1024)   /* FIQ stack */
+#endif
+
+/*-----------------------------------------------------------------------
+ * Physical Memory Map
+ */
+#define CONFIG_NR_DRAM_BANKS    	1   /* we have 1 bank of DRAM */
+#define PHYS_SDRAM_1            	0x00000000   /* SDRAM Bank #1 */
+#define PHYS_SDRAM_1_SIZE       	0x08000000   /* 32 MB */
+#define PHYS_SDRAM_SIZE_DEC     	128
+#define CONFIG_SYS_ENV_SIZE            	0x10000   /* Total Size of Environment Sector */
+#define	CONFIG_ENV_IS_NOWHERE		1
+#define CONFIG_SYS_NO_FLASH		1
+#define CONFIG_BBM			1
+
+/*-----------------------------------------------------------------------
+ * ONENAND configuration
+ */
+#define CONFIG_CMD_ONENAND 		1
+#define CONFIG_SYS_ONENAND_BASE 	0x80000000  /* configure for ttc */
+
+/*-----------------------------------------------------------------------
+ * FREQUENCE configuration
+ */
+#define CONFIG_CMD_FREQUENCE		1
+
+#undef TURN_ON_ETHERNET
+#define TURN_ON_ETHERNET
+#ifdef TURN_ON_ETHERNET
+#define CONFIG_DRIVER_SMC91111 		1
+#define CONFIG_SMC91111_BASE   		0x90000300 /* ttc */
+#define CONFIG_SMC_USE_16_BIT
+#undef CONFIG_SMC_USE_IOFUNCS          /* just for use with the kernel */
+#endif
+
+#define CONFIG_NET_RETRY_COUNT 		10000
+
+#endif
+/* __CONFIG_H */
-- 
1.6.0.4

