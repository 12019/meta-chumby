From 14ead25ad724955af3612f3f7cbca92fd1aac0bf Mon Sep 17 00:00:00 2001
From: Ning Jiang <ning.jiang@marvell.com>
Date: Thu, 9 Jul 2009 17:47:19 +0800
Subject: [PATCH] pxa168: update hibernate process

---
 board/pxa/common/hibernate.S |   49 ++++++++++++++++++++++++++++++++++-------
 1 files changed, 40 insertions(+), 9 deletions(-)

diff --git a/board/pxa/common/hibernate.S b/board/pxa/common/hibernate.S
index 6181f8b..0ca9eb4 100644
--- a/board/pxa/common/hibernate.S
+++ b/board/pxa/common/hibernate.S
@@ -126,16 +126,25 @@ hibernate_pwr_down:
 	bl	init_i2c
 	mov	r4, #0x20
 	mov	r5, #0x06
-	mov	r6, #0x00 /* set IO[1] output */
+	bl	readi2c
+	mov	r4, #0x20
+	mov	r5, #0x06
+	and	r6, r0, #0xfd	/* set IO[1] output */
 	bl	writei2c
 	mov	r4, #0x20
 	mov	r5, #0x02
-	mov	r6, #0xff /* set IO[1] high */
+	bl	readi2c
+	mov	r4, #0x20
+	mov	r5, #0x02
+	orr	r6, r0, #0x2	/* set IO[1] high */
 	bl	writei2c
 	delay	r0
 	mov	r4, #0x20
 	mov	r5, #0x02
-	mov	r6, #0xfd /* set IO[1] low */
+	bl	readi2c
+	mov	r4, #0x20
+	mov	r5, #0x02
+	and	r6, r0, #0xfd	/* set IO[1] low */
 	bl	writei2c
 __loop:
 	nop
@@ -217,8 +226,7 @@ readi2c:
 	orr		r0, r0, r2	/* ALDIE, TB */
 	ldr		r2, =0xfffffffe
 	and		r0, r0, r2	/* ~START */
-	ldr		r2, =0xfffffffd
-	and		r0, r0, r2	/* ~STOP */
+	orr		r0, r0, #0x2	/* STOP */
 	str		r0, [r3, #0x10]
 
 	/* wait until tx buffer empty */
@@ -231,26 +239,49 @@ readi2c:
 	beq		2b
 	str		r2, [r3, #0x18]	/* clear status */
 
-	/* send second byte (register value) */
-	str		r6, [r3, #0x8]	/* IDBR */
+	/* send second byte (slave read address) */
+	orr		r4, r4, #0x1
+	str		r4, [r3, #0x8]	/* IDBR */
+	ldr		r0, [r3, #0x10]	/* read ICR */
+	ldr		r2, =0x1008
+	orr		r0, r0, r2	/* ALDIE, TB */
+	orr		r0, r0, #0x1	/* START */
+	ldr		r2, =0xfffffffd
+	and		r0, r0, r2	/* ~STOP */
+	str		r0, [r3, #0x10]
+
+	/* wait until tx buffer empty */
+	mov		r8, #0x80000	/* time out */
+3:
+	ldr		r2, [r3, #0x18]	/* ISR */
+	subs		r8, r8, #1
+	moveq		pc, lr
+	ands		r2, r2, #0x40	/* ITE in ISR */
+	beq		3b
+	str		r2, [r3, #0x18]	/* clear status */
+
+	/* send stop signal and read data */
 	ldr		r0, [r3, #0x10]	/* read ICR */
 	ldr		r2, =0x1008
 	orr		r0, r0, r2	/* ALDIE, TB */
 	ldr		r2, =0xfffffffe
 	and		r0, r0, r2	/* ~START */
+	orr		r0, r0, #0x4	/* ACKNACK */
 	orr		r0, r0, #0x2	/* STOP */
 	str		r0, [r3, #0x10]
 
-	/* wait until tx buffer empty */
+	/* wait until rx buffer full */
 	mov		r8, #0x80000	/* time out */
 3:
 	ldr		r2, [r3, #0x18]	/* ISR */
 	subs		r8, r8, #1
 	moveq		pc, lr
-	ands		r2, r2, #0x40	/* ITE in ISR */
+	ands		r2, r2, #0x80	/* IRF in ISR */
 	beq		3b
 	str		r2, [r3, #0x18]	/* clear status */
 
+	ldr		r0, [r3, #0x8]
+
 	mov		pc, lr
 
 @*****************************************************************************
-- 
1.6.0.4

